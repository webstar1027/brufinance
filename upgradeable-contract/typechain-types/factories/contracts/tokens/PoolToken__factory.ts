/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PoolToken,
  PoolTokenInterface,
} from "../../../contracts/tokens/PoolToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "NameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintamount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
    ],
    name: "changeName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintamount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "setPoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011b9380380620011b98339810160408190526200003491620001de565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600680546001600160a01b03191633179055506200029b915050565b8280546200008f9062000248565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600082601f8301126200013957600080fd5b81516001600160401b038082111562000156576200015662000285565b604051601f8301601f19908116603f0116810190828211818310171562000181576200018162000285565b816040528381526020925086838588010111156200019e57600080fd5b600091505b83821015620001c25785820183015181830184015290820190620001a3565b83821115620001d45760008385830101525b9695505050505050565b60008060408385031215620001f257600080fd5b82516001600160401b03808211156200020a57600080fd5b620002188683870162000127565b935060208501519150808211156200022f57600080fd5b506200023e8582860162000127565b9150509250929050565b600181811c908216806200025d57607f821691505b602082108114156200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610f0e80620002ab6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635353a2d811610097578063a457c2d711610066578063a457c2d7146101ee578063a9059cbb14610201578063dd62ed3e14610214578063e9e15b4f1461022757600080fd5b80635353a2d81461019757806370a08231146101aa57806395d89b41146101d35780639dc29fac146101db57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261023a565b60405161010f9190610e05565b60405180910390f35b61012b610126366004610cdd565b6102cc565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610ca1565b6102e4565b6040516012815260200161010f565b61012b61017d366004610cdd565b610376565b610195610190366004610cdd565b610398565b005b6101956101a5366004610d07565b6103a6565b61013f6101b8366004610c4c565b6001600160a01b031660009081526020819052604090205490565b610102610442565b6101956101e9366004610cdd565b610451565b61012b6101fc366004610cdd565b61045b565b61012b61020f366004610cdd565b6104e1565b61013f610222366004610c6e565b610563565b610195610235366004610c4c565b61058e565b60606007805461024990610e71565b80601f016020809104026020016040519081016040528092919081815260200182805461027590610e71565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b5050505050905090565b6000336102da8185856105f7565b5060019392505050565b6000336102f285828561071c565b6102fd858585610796565b600554604051632b68fa8d60e21b81526001600160a01b0387811660048301528681166024830152604482018690529091169063ada3ea3490606401600060405180830381600087803b15801561035357600080fd5b505af1158015610367573d6000803e3d6000fd5b50600198975050505050505050565b6000336102da8185856103898383610563565b6103939190610e42565b6105f7565b6103a28282610964565b5050565b6006546001600160a01b031633146103f25760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b60448201526064015b60405180910390fd5b8051610405906007906020840190610b97565b507f1e3652b21ef1bd2c76130610ad0be2b8ab01fbea80964c84c54473bf090dc8a48133604051610437929190610e18565b60405180910390a150565b60606004805461024990610e71565b6103a28282610a43565b600033816104698286610563565b9050838110156104c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103e9565b6104d682868684036105f7565b506001949350505050565b60006104ed8383610b89565b50600554604051632b68fa8d60e21b81523360048201526001600160a01b038581166024830152604482018590529091169063ada3ea3490606401600060405180830381600087803b15801561054257600080fd5b505af1158015610556573d6000803e3d6000fd5b5060019695505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b031633146105d55760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b60448201526064016103e9565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166106595760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103e9565b6001600160a01b0382166106ba5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103e9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107288484610563565b9050600019811461079057818110156107835760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e9565b61079084848484036105f7565b50505050565b6001600160a01b0383166107fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103e9565b6001600160a01b03821661085c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e9565b6001600160a01b038316600090815260208190526040902054818110156108d45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103e9565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061090b908490610e42565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161095791815260200190565b60405180910390a3610790565b6001600160a01b0382166109ba5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e9565b80600260008282546109cc9190610e42565b90915550506001600160a01b038216600090815260208190526040812080548392906109f9908490610e42565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610aa35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103e9565b6001600160a01b03821660009081526020819052604090205481811015610b175760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103e9565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b46908490610e5a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161070f565b6000336102da818585610796565b828054610ba390610e71565b90600052602060002090601f016020900481019282610bc55760008555610c0b565b82601f10610bde57805160ff1916838001178555610c0b565b82800160010185558215610c0b579182015b82811115610c0b578251825591602001919060010190610bf0565b50610c17929150610c1b565b5090565b5b80821115610c175760008155600101610c1c565b80356001600160a01b0381168114610c4757600080fd5b919050565b600060208284031215610c5e57600080fd5b610c6782610c30565b9392505050565b60008060408385031215610c8157600080fd5b610c8a83610c30565b9150610c9860208401610c30565b90509250929050565b600080600060608486031215610cb657600080fd5b610cbf84610c30565b9250610ccd60208501610c30565b9150604084013590509250925092565b60008060408385031215610cf057600080fd5b610cf983610c30565b946020939093013593505050565b600060208284031215610d1957600080fd5b813567ffffffffffffffff80821115610d3157600080fd5b818401915084601f830112610d4557600080fd5b813581811115610d5757610d57610ec2565b604051601f8201601f19908116603f01168101908382118183101715610d7f57610d7f610ec2565b81604052828152876020848701011115610d9857600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610dde57602081850181015186830182015201610dc2565b81811115610df0576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c676020830184610db8565b604081526000610e2b6040830185610db8565b905060018060a01b03831660208301529392505050565b60008219821115610e5557610e55610eac565b500190565b600082821015610e6c57610e6c610eac565b500390565b600181811c90821680610e8557607f821691505b60208210811415610ea657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209c49a7ef007b0444a23d005cac37a92ae5f6f76b8286898788cb49d5bed36fd464736f6c63430008070033";

type PoolTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolToken__factory extends ContractFactory {
  constructor(...args: PoolTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolToken> {
    return super.deploy(
      tokenName,
      symbol,
      overrides || {}
    ) as Promise<PoolToken>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, symbol, overrides || {});
  }
  override attach(address: string): PoolToken {
    return super.attach(address) as PoolToken;
  }
  override connect(signer: Signer): PoolToken__factory {
    return super.connect(signer) as PoolToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolTokenInterface {
    return new utils.Interface(_abi) as PoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolToken {
    return new Contract(address, _abi, signerOrProvider) as PoolToken;
  }
}
