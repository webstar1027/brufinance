/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBruFactory,
  IBruFactoryInterface,
} from "../../../contracts/interfaces/IBruFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
    ],
    name: "ImplementationContractUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "poolName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "interestTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxyPoolAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "ProxyPoolDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "poolName",
        type: "string",
      },
      {
        internalType: "address",
        name: "proxyPoolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "interestTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryAddress",
        type: "address",
      },
    ],
    name: "addPoolDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPoolDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "poolName",
            type: "string",
          },
          {
            internalType: "address",
            name: "poolTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "implementationPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasuryAddress",
            type: "address",
          },
        ],
        internalType: "struct PoolDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "getPoolDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "poolName",
            type: "string",
          },
          {
            internalType: "address",
            name: "poolTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "implementationPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasuryAddress",
            type: "address",
          },
        ],
        internalType: "struct PoolDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
    ],
    name: "upgradeImplementationContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBruFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IBruFactoryInterface {
    return new utils.Interface(_abi) as IBruFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBruFactory {
    return new Contract(address, _abi, signerOrProvider) as IBruFactory;
  }
}
