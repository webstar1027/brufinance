/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  InterestToken,
  InterestTokenInterface,
} from "../../../contracts/tokens/InterestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "NameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintamount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
    ],
    name: "changeName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "changeTransferStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintamount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "setPoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011b8380380620011b88339810160408190526200003491620001de565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600680546001600160a01b03191633179055506200029b915050565b8280546200008f9062000248565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600082601f8301126200013957600080fd5b81516001600160401b038082111562000156576200015662000285565b604051601f8301601f19908116603f0116810190828211818310171562000181576200018162000285565b816040528381526020925086838588010111156200019e57600080fd5b600091505b83821015620001c25785820183015181830184015290820190620001a3565b83821115620001d45760008385830101525b9695505050505050565b60008060408385031215620001f257600080fd5b82516001600160401b03808211156200020a57600080fd5b620002188683870162000127565b935060208501519150808211156200022f57600080fd5b506200023e8582860162000127565b9150509250929050565b600181811c908216806200025d57607f821691505b602082108114156200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610f0d80620002ab6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610201578063a9059cbb14610214578063dd62ed3e14610227578063e9e15b4f1461023a57600080fd5b806370a08231146101b55780638fcde900146101de57806395d89b41146101e65780639dc29fac146101ee57600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d5780635353a2d8146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61024d565b60405161011a9190610de0565b60405180910390f35b610136610131366004610cb8565b6102df565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610c7c565b6102f7565b6040516012815260200161011a565b610136610188366004610cb8565b61031b565b6101a061019b366004610cb8565b61033d565b005b6101a06101b0366004610ce2565b610396565b61014a6101c3366004610c27565b6001600160a01b031660009081526020819052604090205490565b6101a0610410565b61010d610475565b6101a06101fc366004610cb8565b610484565b61013661020f366004610cb8565b6104d4565b610136610222366004610cb8565b61054f565b61014a610235366004610c49565b61055b565b6101a0610248366004610c27565b610586565b60606007805461025c90610e70565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610e70565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b5050505050905090565b6000336102ed8185856105d2565b5060019392505050565b6000336103058582856106f7565b610310858585610771565b506001949350505050565b6000336102ed81858561032e838361055b565b6103389190610e41565b6105d2565b6005546001600160a01b031633146103885760405162461bcd60e51b815260206004820152600960248201526813db9b1e48141bdbdb60ba1b60448201526064015b60405180910390fd5b610392828261093f565b5050565b6006546001600160a01b031633146103c05760405162461bcd60e51b815260040161037f90610e1d565b80516103d3906007906020840190610b72565b507f1e3652b21ef1bd2c76130610ad0be2b8ab01fbea80964c84c54473bf090dc8a48133604051610405929190610df3565b60405180910390a150565b6006546001600160a01b0316331461043a5760405162461bcd60e51b815260040161037f90610e1d565b600654600160a01b900460ff16151560011415610460576006805460ff60a01b19169055565b6006805460ff60a01b1916600160a01b179055565b60606004805461025c90610e70565b6005546001600160a01b031633146104ca5760405162461bcd60e51b815260206004820152600960248201526813db9b1e48141bdbdb60ba1b604482015260640161037f565b6103928282610a1e565b600033816104e2828661055b565b9050838110156105425760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161037f565b61031082868684036105d2565b60006102ed8383610b64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6006546001600160a01b031633146105b05760405162461bcd60e51b815260040161037f90610e1d565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166106345760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161037f565b6001600160a01b0382166106955760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161037f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610703848461055b565b9050600019811461076b578181101561075e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161037f565b61076b84848484036105d2565b50505050565b6001600160a01b0383166107d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161037f565b6001600160a01b0382166108375760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161037f565b6001600160a01b038316600090815260208190526040902054818110156108af5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161037f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108e6908490610e41565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093291815260200190565b60405180910390a361076b565b6001600160a01b0382166109955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161037f565b80600260008282546109a79190610e41565b90915550506001600160a01b038216600090815260208190526040812080548392906109d4908490610e41565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a7e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161037f565b6001600160a01b03821660009081526020819052604090205481811015610af25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161037f565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b21908490610e59565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106ea565b6000336102ed818585610771565b828054610b7e90610e70565b90600052602060002090601f016020900481019282610ba05760008555610be6565b82601f10610bb957805160ff1916838001178555610be6565b82800160010185558215610be6579182015b82811115610be6578251825591602001919060010190610bcb565b50610bf2929150610bf6565b5090565b5b80821115610bf25760008155600101610bf7565b80356001600160a01b0381168114610c2257600080fd5b919050565b600060208284031215610c3957600080fd5b610c4282610c0b565b9392505050565b60008060408385031215610c5c57600080fd5b610c6583610c0b565b9150610c7360208401610c0b565b90509250929050565b600080600060608486031215610c9157600080fd5b610c9a84610c0b565b9250610ca860208501610c0b565b9150604084013590509250925092565b60008060408385031215610ccb57600080fd5b610cd483610c0b565b946020939093013593505050565b600060208284031215610cf457600080fd5b813567ffffffffffffffff80821115610d0c57600080fd5b818401915084601f830112610d2057600080fd5b813581811115610d3257610d32610ec1565b604051601f8201601f19908116603f01168101908382118183101715610d5a57610d5a610ec1565b81604052828152876020848701011115610d7357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b81811015610db957602081850181015186830182015201610d9d565b81811115610dcb576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c426020830184610d93565b604081526000610e066040830185610d93565b905060018060a01b03831660208301529392505050565b6020808252600a908201526927b7363c9030b236b4b760b11b604082015260600190565b60008219821115610e5457610e54610eab565b500190565b600082821015610e6b57610e6b610eab565b500390565b600181811c90821680610e8457607f821691505b60208210811415610ea557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209c6788d12f773d72d214dfa39ac4b8ad68913652732b154601d23506e410604c64736f6c63430008070033";

type InterestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestToken__factory extends ContractFactory {
  constructor(...args: InterestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InterestToken> {
    return super.deploy(
      tokenName,
      symbol,
      overrides || {}
    ) as Promise<InterestToken>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, symbol, overrides || {});
  }
  override attach(address: string): InterestToken {
    return super.attach(address) as InterestToken;
  }
  override connect(signer: Signer): InterestToken__factory {
    return super.connect(signer) as InterestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestTokenInterface {
    return new utils.Interface(_abi) as InterestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterestToken {
    return new Contract(address, _abi, signerOrProvider) as InterestToken;
  }
}
