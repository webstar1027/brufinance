/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CmaSc, CmaScInterface } from "../CmaSc";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "string",
        name: "remark",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "gainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "gainGrade",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "cmaId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "UpdateAuditReport",
    outputs: [
      {
        internalType: "bool",
        name: "done",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "freeTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lienTokens",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "walletType",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cmaAudits",
    outputs: [
      {
        internalType: "string",
        name: "remark",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "gainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "gainGrade",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "valuePerToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "cmaId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "farmerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "grainDetail",
    outputs: [
      {
        internalType: "string",
        name: "otherDetails",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "commodity",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repaymentLoanAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketValueAtTheTimeDepositPerUnit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalMarketValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deliveredToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lienToken",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lienStatus",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalLoanAmount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "whrStatus",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isAudit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isInsurance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "numberOfCmaAudits",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "numberOfLoans",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "valuePerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060146101000a81548160ff021916908360ff16021790555060008060156101000a81548160ff021916908360ff160217905550600060015534801561004b57600080fd5b50610a938061005b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a3c25dae11610071578063a3c25dae14610340578063a8fa8e5214610452578063b7b58b7f14610470578063c6be2371146104ba578063d022c638146104dc578063e390a1b814610500576100a9565b806304f53549146100ae57806327e235e3146100d2578063644946991461013e578063774b69f21461021f5780638da5cb5b146102f6575b600080fd5b6100b6610522565b604051808260ff1660ff16815260200191505060405180910390f35b610114600480360360208110156100e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610535565b604051808481526020018381526020018260ff1660ff168152602001935050505060405180910390f35b61014661056c565b60405180806020018e81526020018d81526020018c81526020018b81526020018a8152602001898152602001888152602001878152602001868152602001851515151581526020018481526020018360ff1660ff16815260200182810382528f818151815260200191508051906020019080838360005b838110156101d85780820151818401526020810190506101bd565b50505050905090810190601f1680156102055780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b61024b6004803603602081101561023557600080fd5b8101908080359060200190929190505050610672565b60405180806020018881526020018781526020018681526020018581526020018481526020018360ff1660ff168152602001828103825289818151815260200191508051906020019080838360005b838110156102b557808201518184015260208101905061029a565b50505050905090810190601f1680156102e25780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6102fe610766565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610438600480360360e081101561035657600080fd5b810190808035906020019064010000000081111561037357600080fd5b82018360208201111561038557600080fd5b803590602001918460018302840111640100000000831117156103a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803560ff16906020019092919050505061078c565b604051808215151515815260200191505060405180910390f35b61045a610955565b6040518082815260200191505060405180910390f35b61047861095b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c2610980565b604051808215151515815260200191505060405180910390f35b6104e4610993565b604051808260ff1660ff16815260200191505060405180910390f35b6105086109a6565b604051808215151515815260200191505060405180910390f35b600060159054906101000a900460ff1681565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b6004806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b50505050509080600101549080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a0160009054906101000a900460ff169080600b01549080600c0160009054906101000a900460ff1690508d565b6011818154811061067f57fe5b9060005260206000209060070201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b5050505050908060010154908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16905087565b600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060016004600c0160009054906101000a900460ff1660ff1614610819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f746f6b656e206973206e6f7420616374697665206e6f772e000000000000000081525060200191505060405180910390fd5b8460018190555060116040518060e001604052808a81526020018981526020018881526020018781526020018681526020018581526020018460ff1681525090806001815401808255809150509060018203906000526020600020906007020160009091929091909150600082015181600001908051906020019061089f9291906109b9565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360ff1602179055505050506000601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506001600360016101000a81548160ff02191690831515021790555060019050809050979650505050505050565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff1681565b600060149054906101000a900460ff1681565b600360019054906101000a900460ff1681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109fa57805160ff1916838001178555610a28565b82800160010185558215610a28579182015b82811115610a27578251825591602001919060010190610a0c565b5b509050610a359190610a39565b5090565b610a5b91905b80821115610a57576000816000905550600101610a3f565b5090565b9056fea265627a7a723158202c333ac7f220df3a67279697d9468b700ace89522de2206fc53f9c3ab4377bdc64736f6c634300050e0032";

export class CmaSc__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CmaSc> {
    return super.deploy(overrides || {}) as Promise<CmaSc>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CmaSc {
    return super.attach(address) as CmaSc;
  }
  connect(signer: Signer): CmaSc__factory {
    return super.connect(signer) as CmaSc__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CmaScInterface {
    return new utils.Interface(_abi) as CmaScInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CmaSc {
    return new Contract(address, _abi, signerOrProvider) as CmaSc;
  }
}
