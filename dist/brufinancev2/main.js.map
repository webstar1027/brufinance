{"version":3,"mappings":"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","names":["l","m","v","ChainlinkAPIService","constructor","http","this","baseURL","wallet","chainlink","walletS","cryptoCompare","environment","priceConversions","ethUsd","xagUsd","xauUsd","inrUsd","usdEth","maticUsd","roundOffDecimal","value","decimal","Math","round","Number","EPSILON","convertUsdToInr","amount","convertInrToUsd","convertUsdToEth","convertEthToWei","Web3","String","nftData","get","sendEth","to","int","balance","sendEthSave","data","post","ethUsdprice","usdEthprice","getXagPrice","getChainlinkPrice","getPriceEthUsd","params","fsym","tsyms","pipe","tap","USD","getPriceUsdEth","ETH","getPriceXagUsd","getPriceXauUsd","getPriceMaticUsd","MATIC","getPriceInrUsd","i0","factory","Subject","enableAccounts","t","provider","window","ethereum","web3","enable","eth","getAccounts","on","accounts","console","log","enableWallet","WalletConnectProvider","infuraId","newEvent","event","_subject","next","asObservable","checkConnection","currentProvider","err","accs","error","length","connectWallet","Observable","subscriber","setInterval","refreshAccounts","then","share","bootstrapWeb3","artifactsToContract","sc","instance","Contract","artifactsToContractV1","artifactsToContractV2","artifactsToFactoryContract","artifactsToTreasuryContract","TreasuryAddress","artifactsToRouterContract","artifactsToIERCContract","artifactsToIERCContractPoolToken","poolTokenAddress","artifactsToBTokenContract","convertToSmallestUnit","toString","convertToLargestUnit","artifactsToContractWrt","artifactsToPoolContract","poolAddress","artifactsToTokenContract","tokenAddress","getAccount","getProvider","trasfer","receiver","sender","sendTransaction","from","utils","toWei","getBalance","address","fromWei","totalSupply","contract","methods","call","res","mintInternal","send","borrowInternal","repayBorrowInternal","redeemInternal","production","cryptoComparePriceURL","googleClientId","facebookClientId","RouterABI","RouterArtifact","PoolABI","PoolArtifact","TreasuryABI","TreasuryArtifact","TokenABI","TokenArtifact","PoolTokenABI","PoolTokenArtifact","TokenAddress","factoryAddress","RouterAddress","factoryABI","FactoryArtifact","ABI","e","lendingContractAddress","tokenContractAddress","bTokenAddress","borrowContractAddress","lendingABI","LABI","iercABI","IERC20","bTokenABI","BToken","borrowABI","BABI","AuthService","socialAuthService","BehaviorSubject","getLoginState","loggedIn$","login","email","password","BASE_URL","getProfile","response","user","googleSignIn","GoogleLoginProvider","signIn","scope","subscribe","catch","facebookSignIn","FacebookLoginProvider","googleLogout","signOut","logout","AppComponent","chainlinkService","authService","router","fetching","fetched","failed","events","val","NavigationEnd","url","ngOnInit","device","detectMob","showOverlay","fetchChainlinkGlobalValues","preloadData","apiFetch$","push","forkJoin","toMatch","some","toMatchItem","navigator","userAgent","match","selectors","HeaderComponent","cd","web3Service","started","connected","selectedPage","navBarCheck","events$","forEach","detectChanges","onLogout","navigateByUrl","onChange","onChangeTBtns","addTokenToWallet","getToken","addNetworkToWallet","result","request","method","type","options","symbol","decimals","image","jsonrpc","chainId","chainName","rpcUrls","nativeCurrency","name","blockExplorerUrls","undefined","n","walletAddress","setTimeout","mintTokenResult","mint","routes","path","redirectTo","pathMatch","component","FullComponent","children","loadChildren","Promise","FlowModule","ContentComponent","NftModule","DepositModule","AppRoutingModule","RouterModule","AuthHttpInterceptor","intercept","req","modifiedReq","clone","withCredentials","handle","catchError","status","throwError","AppModule","bootstrap","provide","HTTP_INTERCEPTORS","useClass","multi","Web3Service","useValue","autoLogin","providers","id","FormBuilder","imports","BrowserModule","HttpClientModule","NgbModule","SocialLoginModule","FormsModule","BrowserAnimationsModule","ToastrModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule"],"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/common/services/chainlink-api.service.ts","./src/app/common/services/web3.service.ts","./src/environments/environment.uat.ts","./src/app/modules/auth/services/auth.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/common/components/header/header.component.html","./src/app/common/components/header/header.component.ts","./src/app/app-routing.module.ts","./src/app/common/components/layouts/full/full.component.ts","./src/app/common/components/layouts/full/full.component.html","./src/app/common/routes/full.routes.ts","./src/app/common/components/layouts/content/content.component.ts","./src/app/common/components/layouts/content/content.component.html","./src/app/common/routes/content.routes.ts","./src/app/common/interceptors/auth-http.interceptor.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { tap } from 'rxjs/operators';\r\nimport Web3 from 'web3';\r\n\r\nimport { PriceConversions } from '../models/price-conversions';\r\n\r\ninterface USDConversionResponse {\r\n  USD: number;\r\n  ETH: number;\r\n}\r\ninterface USDToMaticCOnversionReponse{\r\n  MATIC:number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChainlinkAPIService {\r\n  baseURL = '';\r\n  wallet = '';\r\n  walletS = '';\r\n  chainlink: string;\r\n  cryptoCompare: string;\r\n\r\n  priceConversions: PriceConversions;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseURL = 'https://uat-backend.whrrl.in/';\r\n    this.wallet = 'https://uat-warehouses.whrrl.in/api/mswc/';\r\n    this.chainlink = 'https://bk.bru.finance/';\r\n    this.walletS = 'https://uat-warehouses.whrrl.in/api/mswc/';\r\n    this.cryptoCompare = environment.cryptoComparePriceURL;\r\n\r\n    this.priceConversions = {\r\n      ethUsd: 0,\r\n      xagUsd: 0,\r\n      xauUsd: 0,\r\n      inrUsd: 0,\r\n      usdEth: 0,\r\n      maticUsd:0\r\n    };\r\n  }\r\n\r\n  roundOffDecimal(value: number, decimal: number = 2) {\r\n    return (\r\n      Math.round((Number(value) + Number.EPSILON) * 10 ** decimal) /\r\n      10 ** decimal\r\n    );\r\n  }\r\n\r\n  convertUsdToInr(amount: number | string) {\r\n    return Number(amount) / this.priceConversions.inrUsd;\r\n  }\r\n\r\n  convertInrToUsd(amount: number) {\r\n    return Number(amount) * this.priceConversions.inrUsd;\r\n  }\r\n\r\n  convertUsdToEth(amount: number) {\r\n    return Number(amount) * this.priceConversions.usdEth;\r\n  }\r\n\r\n  convertEthToWei(amount: number) {\r\n    return Web3.utils.toWei(String(amount), 'ether');\r\n  }\r\n\r\n  nftData() {\r\n    return this.http.get(this.baseURL + 'nft/nftData');\r\n  }\r\n  sendEth(to: any, value: any, int: any) {\r\n    return this.http.get(this.walletS + `eth-send/${to}/${value}/${int}`);\r\n  }\r\n  balance(to: any) {\r\n    return this.http.get(this.wallet + `eth-balance/${to}/`);\r\n  }\r\n  sendEthSave(data: any) {\r\n    return this.http.post(this.wallet + 'eth-send-save', data);\r\n  }\r\n  ethUsdprice() {\r\n    return this.http.get(this.wallet + 'band-price');\r\n  }\r\n\r\n  usdEthprice() {\r\n    return this.http.get(this.wallet + 'band-price');\r\n  }\r\n  getXagPrice() {\r\n    return this.http.get(this.wallet + 'xag-price');\r\n  }\r\n\r\n  getChainlinkPrice(data: any) {\r\n    return this.http.post(this.chainlink, data);\r\n  }\r\n\r\n  getPriceEthUsd() {\r\n    return this.http\r\n      .get<USDConversionResponse>(this.cryptoCompare, {\r\n        params: {\r\n          fsym: 'ETH',\r\n          tsyms: 'USD',\r\n        },\r\n      })\r\n      .pipe(tap(({ USD }) => (this.priceConversions.ethUsd = USD)));\r\n  }\r\n\r\n  getPriceUsdEth() {\r\n    return this.http\r\n      .get<USDConversionResponse>(this.cryptoCompare, {\r\n        params: {\r\n          fsym: 'USD',\r\n          tsyms: 'ETH',\r\n        },\r\n      })\r\n      .pipe(tap(({ ETH }) => (this.priceConversions.usdEth = ETH)));\r\n  }\r\n  getPriceXagUsd() {\r\n    return this.http.get(this.cryptoCompare, {\r\n      params: {\r\n        fsym: 'XAG',\r\n        tsyms: 'USD',\r\n      },\r\n    });\r\n  }\r\n\r\n  getPriceXauUsd() {\r\n    return this.http.get(this.cryptoCompare, {\r\n      params: {\r\n        fsym: 'XAU',\r\n        tsyms: 'USD',\r\n      },\r\n    });\r\n  }\r\n  getPriceMaticUsd() {\r\n    return this.http.get<USDToMaticCOnversionReponse>(this.cryptoCompare, {\r\n      params: {\r\n        fsym: 'USD',\r\n        tsyms: 'MATIC',\r\n      },\r\n    }).pipe(tap(({ MATIC }) => (this.priceConversions.maticUsd = MATIC)));\r\n  }\r\n\r\n  getPriceInrUsd() {\r\n    return this.http\r\n      .get<USDConversionResponse>(this.cryptoCompare, {\r\n        params: {\r\n          fsym: 'INR',\r\n          tsyms: 'USD',\r\n        },\r\n      })\r\n      .pipe(tap(({ USD }) => (this.priceConversions.inrUsd = USD)));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Web3 from 'web3';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { share, subscribeOn } from 'rxjs/operators';\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { JsonRpcPayload, JsonRpcResponse } from 'web3-core-helpers';\r\nimport { AbstractProvider } from 'web3-core/types'\r\n\r\ndeclare let require: any;\r\ndeclare let ethereum: any;\r\ndeclare let window: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport declare class WalletConnectWeb3Provider extends WalletConnectProvider implements AbstractProvider {\r\n\tsendAsync(payload: JsonRpcPayload, callback: (error: Error | null, result?: JsonRpcResponse) => void): void;\r\n}\r\n\r\nexport class Web3Service {\r\n  private _subject = new Subject<any>();\r\n  private web3: any;\r\n  private accounts: string[] = [];\r\n  public ready = false;\r\n  public abi: any;\r\n  private contract: any;\r\n  // private contractAddress: string;\r\n  private amount: number | undefined;\r\n  public accountsSubject = new Subject<string[]>();\r\n  public sc: any;\r\n  environment: any;\r\n  provider: any;\r\n\r\n  constructor() { }\r\n\r\n\r\n  public async enableAccounts(): Promise<any> {\r\n    this.provider = window.ethereum;\r\n    this.web3 = new Web3(this.provider);\r\n    await this.provider.enable();\r\n    const account = await this.web3.eth.getAccounts();\r\n    this.provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      console.log('wallet connect provider ',accounts);\r\n      return accounts;\r\n    });\r\n\r\n  }\r\n\r\n  public async enableWallet(): Promise<any> {\r\n    this.provider= new WalletConnectProvider({\r\n      infuraId: \"66eeaa8fd42d410981e1ee55b10bc857\",\r\n    });\r\n    this.web3 = new Web3(this.provider as WalletConnectWeb3Provider)\r\n    await this.provider.enable();\r\n    const account = await this.web3.eth.getAccounts();\r\n    this.provider.on(\"accountsChanged\", (accounts: string[]) => {\r\n      console.log('wallet connect provider ',accounts);\r\n      return accounts;\r\n    });\r\n  }\r\n\r\n  newEvent(event: any) {\r\n    this._subject.next(event);\r\n  }\r\n\r\n  get events$() {\r\n    return this._subject.asObservable();\r\n  }\r\n\r\n  async checkConnection() {\r\n    if (typeof window.web3 !== 'undefined') {\r\n      this.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      Web3.providers.HttpProvider.prototype.sendAsync =\r\n        Web3.providers.HttpProvider.prototype.send;\r\n      this.web3 = new Web3(\r\n        new Web3.providers.HttpProvider(environment.baseURL)\r\n      );\r\n    }\r\n    return this.web3.eth.getAccounts((err: any, accs: any) => {\r\n      if (err != null) {\r\n        console.error(\"An error occurred: \" + err);\r\n      }\r\n      else if (accs.length == 0) {\r\n        console.log(\"User is not logged in to MetaMask\")\r\n      }\r\n      else {\r\n        console.log(\"User is logged in to MetaMask\")\r\n      }\r\n    })\r\n  }\r\n\r\n  public connectWallet(): Observable<any> {\r\n    return new Observable((subscriber) => {\r\n      setInterval(this.refreshAccounts, 500);\r\n      // check if privacy mode is activated and request access\r\n      this.enableWallet().then((accounts: any[]) => {\r\n        subscriber.next(accounts);\r\n        this.refreshAccounts();\r\n      });\r\n    }).pipe(share());\r\n  }\r\n\r\n  public bootstrapWeb3(): Observable<any> {\r\n    return new Observable((subscriber) => {\r\n      \r\n      setInterval(this.refreshAccounts, 500);\r\n      // check if privacy mode is activated and request access\r\n      this.enableAccounts().then((accounts: any[]) => {\r\n        subscriber.next(accounts);\r\n\r\n        this.refreshAccounts();\r\n      });\r\n\r\n      // this.abi = this.artifactsToContract(this.sc);\r\n    }).pipe(share());\r\n  }\r\n\r\n  public refreshAccounts = () => {\r\n    // if (typeof window.web3 !== 'undefined') {\r\n    //   this.web3.eth.getAccounts((err: any, accs: any) => {\r\n    //     // console.log('Observed new accounts accs',accs);\r\n    //     // console.log(\r\n    //     //   ' this.getProviderName ',\r\n    //     //   this.web3.givenProvider.networkVersion\r\n    //     // );\r\n    //     // For MATIC Network *******************\r\n    //     if (\r\n    //       this.web3.givenProvider.networkVersion !== '80001' &&\r\n    //       this.web3.givenProvider.networkVersion !== '4' &&\r\n    //       this.web3.givenProvider.networkVersion !== '5777' &&\r\n    //       this.web3.givenProvider.networkVersion !== '31337'\r\n    //     ) {\r\n    //       // if (this.web3.givenProvider.networkVersion !== '4') {\r\n    //       let linkTestnet =\r\n    //         'https://docs.binance.org/smart-chain/wallet/metamask.html#connect-your-metamask-with-binance-smart-chain';\r\n    //       alert(\r\n    //         'Connect your  MetaMask wallet to matic testnet network!  \\n  \\n '\r\n    //       );\r\n    //     }\r\n\r\n    //     if (err != null) {\r\n    //       console.warn('There was an error fetching your accounts.');\r\n    //       return;\r\n    //     }\r\n\r\n    //     // accs = ethereum.request({ method: 'eth_accounts' });\r\n\r\n    //     // Get the initial account balance so it can be displayed.\r\n    //     if (accs.length === 0) {\r\n    //       console.warn(\r\n    //         \"Couldn't get any accounts! Make sure your Ethereum client is configured correctly.\"\r\n    //       );\r\n    //       return;\r\n    //     }\r\n\r\n    //     if (\r\n    //       !this.accounts ||\r\n    //       this.accounts.length !== accs.length ||\r\n    //       this.accounts[0] !== accs[0]\r\n    //     ) {\r\n    //       console.log('Observed new accounts', accs);\r\n\r\n    //       this.accountsSubject.next(accs);\r\n    //       // for (let i = 0; i < accs.length; i++) {\r\n    //       //   this.accounts[i] = accs[i];\r\n    //       // }\r\n    //       this.accounts = accs;\r\n    //       localStorage.setItem('userAccount', this.accounts[0]);\r\n    //       console.log('Observed new accounts1', this.accounts);\r\n    //     }\r\n    //     // this.newEvent(this.accounts)\r\n    //     // console.log('Observed new accounts2', this.accounts);\r\n    //     this.ready = true;\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  public artifactsToContract(sc: any) {\r\n    console.log(`artifacts to contract ${sc}`);\r\n    if (sc) {\r\n      if (this.web3) {\r\n        const instance = new this.web3.eth.Contract(environment.ABI.abi, sc);\r\n        console.log(instance);\r\n        return instance;\r\n      }\r\n    }\r\n  }\r\n  public artifactsToContractV1() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.lendingABI, environment.lendingContractAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n  public artifactsToContractV2() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.borrowABI, environment.borrowContractAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n\r\n  public artifactsToFactoryContract() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.factoryABI, environment.factoryAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n  public artifactsToTreasuryContract(TreasuryAddress: any) {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.TreasuryABI, TreasuryAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n  }\r\n\r\n  public artifactsToRouterContract() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.RouterABI, environment.RouterAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n  }\r\n  public artifactsToIERCContract() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.iercABI, environment.TokenAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n  public artifactsToIERCContractPoolToken(poolTokenAddress:any) {\r\n    if (this.web3) {\r\n\r\n      const instance = new this.web3.eth.Contract(environment.PoolTokenABI, poolTokenAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n  public artifactsToBTokenContract() {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.bTokenABI, environment.bTokenAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n\r\n  }\r\n\r\n  public convertToSmallestUnit(amount: any) {\r\n    return Web3.utils.toWei(amount.toString())\r\n  }\r\n  public convertToLargestUnit(amount: any) {\r\n    return Web3.utils.fromWei(amount.toString(), 'ether')\r\n  }\r\n\r\n  public artifactsToContractWrt(sc: any) {\r\n    if (sc) {\r\n      if (this.web3) {\r\n        const instance = new this.web3.eth.Contract(environment.ABI.abi, sc);\r\n        console.log(`instance of contract is ready ${instance}`);\r\n        return instance;\r\n      }\r\n    }\r\n  }\r\n  public artifactsToPoolContract(poolAddress: any) {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.PoolABI, poolAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n  }\r\n  public artifactsToTokenContract(tokenAddress: any) {\r\n    if (this.web3) {\r\n      const instance = new this.web3.eth.Contract(environment.TokenABI, tokenAddress);\r\n      console.log(instance);\r\n      return instance;\r\n    }\r\n  }\r\n\r\n  public getAccount() {\r\n    // this.bootstrapWeb3();\r\n    if (!this.accounts) {\r\n      console.log(\r\n        \"Couldn't get any accounts! Make sure your Ethereum client is configured correctly.\"\r\n      );\r\n      return null;\r\n    }\r\n    console.log(\r\n      'get account address web3 ---->>>>',\r\n      this.accounts\r\n    );\r\n    return this.accounts[0];\r\n  }\r\n\r\n  public getProvider() {\r\n    return this.web3.currentProvider;\r\n  }\r\n\r\n  public trasfer(receiver: any, sender: any, value: any) {\r\n    return this.web3.eth.sendTransaction({\r\n      to: receiver,\r\n      from: sender,\r\n      value: this.web3.utils.toWei(value, 'ether'),\r\n    });\r\n  }\r\n\r\n  // public balanceOf(address: any) {\r\n  //   return this.web3.eth.balanceOf(address).then((data: any) => {\r\n  //     return this.web3.utils.fromWei(data, 'ether');\r\n  //   });\r\n\r\n  public getBalance(address: any) {\r\n    return this.web3.eth.getBalance(address).then((data: any) => {\r\n      console.log('MATIC balance of ', address);\r\n      console.log('MATIC balance *********** ', data);\r\n      return this.web3.utils.fromWei(data, 'ether');\r\n    });\r\n  }\r\n\r\n  public totalSupply(sc: any) {\r\n    sc = environment.ABI.networks[3].address;\r\n    console.log(`OUTER FUNCTION   ${this.amount}`);\r\n    console.log(`yes function is getting called!`);\r\n    if (this.web3) {\r\n      console.log(this.amount);\r\n      console.log(environment.ABI.networks[3].address);\r\n      return this.web3.eth.contract.methods.totalSupply().call(\r\n        {\r\n          from: this.getAccount(),\r\n          to: sc,\r\n        },\r\n        function (err: any, res: any) {\r\n          if (res) {\r\n            console.log(res);\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public mintInternal(amount: any, sc: any) {\r\n    this.amount = amount;\r\n    sc = environment.ABI.networks[3].address;\r\n    console.log(`OUTER FUNCTION   ${this.amount}`);\r\n    console.log(`yes function is getting called!`);\r\n    if (this.web3) {\r\n      console.log(this.amount);\r\n      console.log(environment.ABI.networks[3].address);\r\n      return this.web3.eth.contract.methods.mintInternal().send(\r\n        {\r\n          from: this.getAccount(),\r\n          to: sc,\r\n          value: this.web3.toWei(this.amount, 'ether'),\r\n        },\r\n        function (err: any, res: any) {\r\n          if (res) {\r\n            console.log(res);\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public borrowInternal(amount: any) {\r\n    this.amount = amount;\r\n    console.log(`OUTER FUNCTION   ${this.amount}`);\r\n    console.log(`yes function is getting called!`);\r\n    if (this.web3) {\r\n      console.log(this.amount);\r\n      console.log(environment.ABI.networks[3].address);\r\n      return this.web3.eth.contract.methods.borrowInternal().send(\r\n        {\r\n          from: this.getAccount(),\r\n          to: environment.ABI.networks[3].address,\r\n          value: this.web3.toWei(this.amount, 'ether'),\r\n        },\r\n        function (err: any, res: any) {\r\n          if (res) {\r\n            console.log(res);\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public repayBorrowInternal(amount: any, sc: any) {\r\n    console.log(`OUTER FUNCTION   ${this.amount}`);\r\n    console.log(`yes function is getting called!`);\r\n    if (this.web3) {\r\n      console.log(amount);\r\n      console.log(environment.ABI.networks[3].address);\r\n      return this.web3.eth.contract.methods.repayBorrowInternal().send(\r\n        {\r\n          from: this.getAccount(),\r\n          to: sc,\r\n          value: this.web3.toWei(amount, 'ether'),\r\n        },\r\n        function (err: any, res: any) {\r\n          if (res) {\r\n            console.log(res);\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public redeemInternal(amount: any) {\r\n    // this.amount = amount;\r\n    // console.log(`OUTER FUNCTION   ${this.amount}`);\r\n    // console.log(`yes function is getting called!`);\r\n    if (this.web3) {\r\n      console.log(amount);\r\n      console.log(environment.ABI.networks[3].address);\r\n      return this.web3.eth.contract.methods.redeemInternal(amount).send(\r\n        {\r\n          from: this.getAccount(),\r\n          to: environment.ABI.networks[3].address,\r\n          value: amount,\r\n          // this.web3.toWei(this.amount, 'wei')\r\n        },\r\n        function (err: any, res: any) {\r\n          if (res) {\r\n            console.log(res);\r\n          } else {\r\n            console.log(err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n// import API from '../../contract_details/btoken.json';\r\nimport * as ABI from '../../contract_details/btoken.json';\r\nimport LABI from '../../contract_details/Lending.json';\r\nimport BABI from '../../contract_details/Borrow.json';\r\nimport IERC20 from '../../upgradeable-contract/artifacts/contracts/tokens/TestToken.sol/TestToken.json';\r\nimport BToken from '../../contract_details/BToken1.json';\r\nimport RouterArtifact from '../../upgradeable-contract/artifacts/contracts/BruRouter.sol/BruRouter.json';\r\nimport PoolArtifact from '../../upgradeable-contract/artifacts/contracts/core/BruPool.sol/BruPool.json';\r\nimport TreasuryArtifact from '../../upgradeable-contract/artifacts/contracts/core/AssetTreasury.sol/AssetTreasury.json';\r\nimport PoolTokenArtifact from '../../upgradeable-contract/artifacts/contracts/tokens/PoolToken.sol/PoolToken.json';\r\nimport FactoryArtifact from '../../upgradeable-contract/artifacts/contracts/core/BruFactory.sol/BruFactory.json';\r\nimport TokenArtifact from '../../upgradeable-contract/artifacts/contracts/tokens/TestToken.sol/TestToken.json';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // baseURL: 'http://localhost:3000',\r\n  baseURL: 'https://uatbackend.bru.finance',\r\n  cryptoComparePriceURL: 'https://min-api.cryptocompare.com/data/price',\r\n  googleClientId:\r\n    '602242376186-qsqghv1gcni9j1bvpu3f5fshafho7dco.apps.googleusercontent.com',\r\n  facebookClientId: '258151686411272',\r\n  // RouterAddress : '0xa3c552c713A68BA2E7e8838fb4C2D13cABDBfD03',\r\n  RouterABI: RouterArtifact.abi,\r\n  PoolABI: PoolArtifact.abi,\r\n  TreasuryABI: TreasuryArtifact.abi,\r\n  TokenABI: TokenArtifact.abi,\r\n  PoolTokenABI: PoolTokenArtifact.abi,\r\n  TokenAddress: '0xdAD510AcEEcfD4beBCF3F55e8b96f1043C0EaA5E',\r\n  factoryAddress: '0x46d6003EF5d28B6CD414328cb4B809c9b53F52cc',\r\n  RouterAddress: '0xC1709088bca13d4cD774432A2451dc6006FAC48e',\r\n  // TokenAddress:\"0x5B9042a9a3207b9dbED0D4E52384890048922760\",\r\n  // factoryAddress:'0x8c5233519393124F0DF5023afCA090B150af7eA8',\r\n  factoryABI: FactoryArtifact.abi,\r\n  ABI,\r\n  lendingContractAddress: '0x6FFa0968A6A2851f76b8294E99C223E715829B44',\r\n  tokenContractAddress: '0xdAD510AcEEcfD4beBCF3F55e8b96f1043C0EaA5E',\r\n  bTokenAddress: '0x25B32f1bCe3842Ae3D8e7DDf344e6e9498f01A7c',\r\n  borrowContractAddress: '0xd73C1AeE2326B02669b64813725EA5FfEFa0adb2',\r\n  lendingABI: LABI,\r\n  iercABI: IERC20.abi,\r\n  bTokenABI: BToken,\r\n  borrowABI: BABI,\r\n};\r\n\r\n// {\r\n// \t\"TOKEN_ADDRESS\": \"0xdAD510AcEEcfD4beBCF3F55e8b96f1043C0EaA5E\",\r\n// \t\"FACTORY_ADDRESS\": \"0x46d6003EF5d28B6CD414328cb4B809c9b53F52cc\",\r\n// \t\"ROUTER_ADDRESS\": \"0xC1709088bca13d4cD774432A2451dc6006FAC48e\"\r\n// }\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap, catchError, finalize, share, filter } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport {\r\n  SocialAuthService,\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n} from 'angularx-social-login';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private BASE_URL: string = environment.baseURL;\r\n\r\n  user: any;\r\n  loggedIn$ = new BehaviorSubject<any>(null);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private socialAuthService: SocialAuthService\r\n  ) {}\r\n\r\n  getLoginState() {\r\n    return this.loggedIn$.asObservable();\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    console.log(email, password);\r\n    return this.http\r\n      .post(`${this.BASE_URL}/api/v1/auth/login`, {\r\n        email,\r\n        password,\r\n      })\r\n      .pipe(\r\n        tap(() => {\r\n          this.loggedIn$.next(true);\r\n        }),\r\n        share()\r\n      );\r\n  }\r\n\r\n  getProfile() {\r\n    return this.http.get(`${this.BASE_URL}/api/v1/auth/profile`).pipe(\r\n      tap((response: any) => {\r\n        this.loggedIn$.next(true);\r\n        this.user = response.data.user;\r\n      }),\r\n      share()\r\n    );\r\n  }\r\n\r\n  googleSignIn() {\r\n    \r\n    return new Observable((subscriber) => {\r\n      console.log(\"provider Id\", GoogleLoginProvider.PROVIDER_ID)\r\n      this.socialAuthService\r\n        .signIn(GoogleLoginProvider.PROVIDER_ID, {scope: environment.googleClientId})\r\n        .then((response) => {\r\n          this.http\r\n            .post(`${this.BASE_URL}/api/v1/auth/google-signin`, response)\r\n            .pipe(\r\n              tap((response: any) => {\r\n                this.loggedIn$.next(true);\r\n                this.user = response.data.user;\r\n              }),\r\n              share()\r\n            )\r\n            .subscribe(\r\n              (response) => {\r\n                subscriber.next(response);\r\n              },\r\n              (err) => {\r\n                subscriber.error(err);\r\n              }\r\n            );\r\n          console.log(response)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          subscriber.error(err)\r\n        });\r\n    });\r\n  }\r\n\r\n  facebookSignIn() {\r\n    return new Observable((subscriber) => {\r\n      this.socialAuthService\r\n        .signIn(FacebookLoginProvider.PROVIDER_ID)\r\n        .then((response) => {\r\n          this.http\r\n            .post(`${this.BASE_URL}/api/v1/auth/facebook-signin`, response)\r\n            .pipe(\r\n              tap((response: any) => {\r\n                this.loggedIn$.next(true);\r\n                this.user = response.data.user;\r\n              }),\r\n              share()\r\n            )\r\n            .subscribe(\r\n              (response) => {\r\n                subscriber.next(response);\r\n              },\r\n              (err) => {\r\n                subscriber.error(err);\r\n              }\r\n            );\r\n        })\r\n        .catch((err) => subscriber.error(err));\r\n    });\r\n  }\r\n\r\n  googleLogout() {\r\n    this.socialAuthService.signOut();\r\n  }\r\n\r\n  logout() {\r\n    return this.http.post(`${this.BASE_URL}/api/v1/auth/logout`, {}).pipe(\r\n      tap(() => {\r\n        this.loggedIn$.next(false);\r\n        this.user = null;\r\n      })\r\n    );\r\n  }\r\n}\r\n","<!-- <ng-container *ngIf=\"preloadData.fetching\">\r\n  <p>Starting...</p>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container *ngIf=\"!preloadData.fetching && preloadData.fetched\"> -->\r\n<ng-container>\r\n  <div *ngIf=\"showOverlay\" class=\"overlayforMobDev\">\r\n    <p>\r\n      <img class=\"bruLogoOverlay\" src=\"../assets/bruFinanceLogo.png\">\r\n      Works best on Chrome on\r\n      <span class=\"highlight\">Desktop.</span>\r\n    </p>\r\n  </div>\r\n  <router-outlet></router-outlet>\r\n</ng-container>\r\n\r\n<!-- <ng-template *ngIf=\"!preloadData.fetching && preloadData.failed\"> -->\r\n<!-- <p>Preload data fetch failed. :-(</p> -->\r\n<!-- </ng-template> -->","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ChainlinkAPIService } from './common/services/chainlink-api.service';\r\nimport { Web3Service } from './common/services/web3.service';\r\nimport { AuthService } from './modules/auth/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'brufinancev2';\r\n  showOverlay: Boolean = false;\r\n  preloadData: { fetching: boolean; fetched: boolean; failed: boolean } = {\r\n    fetching: false,\r\n    fetched: false,\r\n    failed: false,\r\n  };\r\n\r\n  constructor(\r\n    private chainlinkService: ChainlinkAPIService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private web3: Web3Service\r\n  ) {\r\n    this.router.events.subscribe((val) => {\r\n      if (val instanceof NavigationEnd) {\r\n        this.web3.newEvent(this.router.url)\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    let device = this.detectMob();\r\n    console.log(\"is Mobile = \", device)\r\n    if (device) {\r\n      this.showOverlay = true;\r\n    } else {\r\n      this.showOverlay = false;\r\n    }\r\n    // this.authService.getProfile().subscribe(\r\n    //   () => { },\r\n    //   () => {\r\n    //     this.router.navigateByUrl('/auth/login');\r\n    //   }\r\n    // );\r\n\r\n    this.fetchChainlinkGlobalValues();\r\n  }\r\n\r\n  fetchChainlinkGlobalValues() {\r\n    this.preloadData.fetching = true;\r\n    const apiFetch$: any[] = [];\r\n    apiFetch$.push(this.chainlinkService.getPriceEthUsd());\r\n    apiFetch$.push(this.chainlinkService.getPriceInrUsd());\r\n    apiFetch$.push(this.chainlinkService.getPriceUsdEth());\r\n    apiFetch$.push(this.chainlinkService.getPriceMaticUsd());\r\n\r\n    forkJoin({\r\n      ethUsd: this.chainlinkService.getPriceEthUsd(),\r\n      inrUsd: this.chainlinkService.getPriceInrUsd(),\r\n      usdEth: this.chainlinkService.getPriceUsdEth(),\r\n      maticUsd: this.chainlinkService.getPriceMaticUsd()\r\n    }).subscribe(\r\n      (response: any) => {\r\n        this.preloadData.fetching = false;\r\n        this.preloadData.fetched = true;\r\n      },\r\n      (error) => {\r\n        this.preloadData.fetching = false;\r\n        this.preloadData.failed = true;\r\n      }\r\n    );\r\n  }\r\n  detectMob() {\r\n    const toMatch = [\r\n      /Android/i,\r\n      /webOS/i,\r\n      /iPhone/i,\r\n      /iPad/i,\r\n      /iPod/i,\r\n      /BlackBerry/i,\r\n      /Windows Phone/i\r\n    ];\r\n\r\n    return toMatch.some((toMatchItem) => {\r\n      return navigator.userAgent.match(toMatchItem);\r\n    });\r\n  }\r\n}\r\n","<div class=\"header\">\r\n  <nav class=\"navbar navbar-expand-sm navbar-light bg-light navBsty\">\r\n    <div class=\"container-fluid\">\r\n      <a href=\"/\" class=\"navbar-brand\"\r\n        ><img src=\"../../../../assets/bruFinanceLogo.png\" class=\"logoImg\"\r\n      /></a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#mynavbar\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"mynavbar\">\r\n        <ul class=\"navbar-nav\" *ngIf=\"started && !connected\">\r\n          <li class=\"nav-item\">\r\n            <a [routerLink]=\"['/home']\" class=\"nav-link aListSty\" href=\"#\"\r\n              >Back</a\r\n            >\r\n          </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav me-auto\" *ngIf=\"connected\">\r\n          <li class=\"nav-item test\">\r\n            <select\r\n              class=\"selectSty testBtn\"\r\n              name=\"testbtns\"\r\n              [ngModel]=\"testBtns\"\r\n              (ngModelChange)=\"onChangeTBtns($event)\"\r\n            >\r\n              <option value=\"\" disabled selected>Test Suite</option>\r\n              <option value=\"addnetwork\">Add Polygon Network</option>\r\n              <option value=\"addtestusdt\">Add Test USDT to MetaMask</option>\r\n              <option value=\"testusdt\">Get Test USDT</option>\r\n            </select>\r\n          </li>\r\n          <li class=\"nav-item sadhohsuda\">\r\n            <a\r\n              [routerLink]=\"['/home/my-transactions']\"\r\n              class=\"nav-link aListSty headerLink\"\r\n              href=\"#\"\r\n              >My Transactions</a\r\n            >\r\n          </li>\r\n          <!-- <li class=\"nav-item\">\r\n            <a [routerLink]=\"['/home']\" class=\"nav-link aListSty2\" href=\"#\">How it works</a>\r\n          </li> -->\r\n          <!-- <li class=\"nav-item selectLB\">\r\n            <select class=\"selectSty\" name=\"pageName\" [ngModel]=\"selectedPage\" (ngModelChange)=\"onChange($event)\">\r\n              <option value=\"\" disabled selected>--Select--</option>\r\n              <option value=\"lend\">Buy Bonds</option>\r\n              <option value=\"borrow\">Borrow</option>\r\n            </select>\r\n          </li> -->\r\n        </ul>\r\n        <!-- <ul class=\"navbar-nav me-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\">Link</a>\r\n          </li>\r\n        </ul> -->\r\n        <!-- <div *ngIf=\"connected\" class=\"divLBtn d-flex\">\r\n          <button (click)=\"onLogout()\" class=\"btn logoutbtn\">Logout</button>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  <!-- <nav class=\"navbar navbar-expand-sm navbar-light bg-light\" style=\"height: 67px;\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" ><img src=\"https://bru.finance/images/brufinanceLogo.png\" class=\"logoImg\"></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#mynavbar\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"mynavbar\">\r\n      <ul class=\"navbar-nav me-auto\" *ngIf=\"started && !connected\">\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/home']\" class=\"nav-link aListSty\" href=\"#\">Back</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav\" *ngIf=\"connected\">\r\n        <li class=\"nav-item\">\r\n          <select class=\"selectSty testBtn\"  name=\"testbtns\" [ngModel]=\"testBtns\" (ngModelChange)=\"onChangeTBtns($event)\">\r\n            <option value=\"\" disabled selected>Test</option>\r\n            <option value=\"addtestusdt\">Add Test USDT to MetaMask</option>\r\n            <option value=\"testusdt\">Get Test USDT</option>\r\n          </select>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/home/my-transactions']\" class=\"nav-link aListSty  \" href=\"#\">My Transactions</a>\r\n        </li>\r\n        <li class=\"nav-item \">\r\n          <a [routerLink]=\"['/home']\" class=\"nav-link aListSty\" href=\"#\">How it works</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <select class=\"selectSty\" name=\"pageName\" [ngModel]=\"selectedPage\" (ngModelChange)=\"onChange($event)\">\r\n            <option value=\"\" disabled selected>--Select--</option>\r\n            <option value=\"lend\">Lend</option>\r\n            <option value=\"borrow\">Borrow</option>\r\n          </select>\r\n        </li>\r\n        <li>\r\n          <div *ngIf=\"connected\" class=\"d-flex divLBtn\">\r\n            <button (click)=\"onLogout()\" class=\"btn logoutbtn\">Logout</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      \r\n    </div>\r\n  </div>\r\n</nav> -->\r\n\r\n  <!-- <nav class=\"navbar navbar-expand-lg navbar-light navBsty\" style=\"height: 67px;\">\r\n     <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\" style=\"display: contents !important;\">\r\n      <img src=\"https://bru.finance/images/brufinanceLogo.png\" class=\"logoImg\">\r\n      <ul class=\"navbar-nav\" *ngIf=\"started && !connected\">\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/home']\" class=\"nav-link aListSty\" href=\"#\">Back</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav\" *ngIf=\"connected\">\r\n        <li class=\"nav-item\">\r\n          <select class=\"selectSty testBtn\" name=\"testbtns\" [ngModel]=\"testBtns\" (ngModelChange)=\"onChangeTBtns($event)\">\r\n            <option value=\"\" disabled selected>Test</option>\r\n            <option value=\"addtestusdt\">Add Test USDT to MetaMask</option>\r\n            <option value=\"testusdt\">Get Test USDT</option>\r\n          </select>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/home/my-transactions']\" class=\"nav-link aListSty\" href=\"#\">My Transactions</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/home']\" class=\"nav-link aListSty\" href=\"#\">How it works</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <select class=\"selectSty\" name=\"pageName\" [ngModel]=\"selectedPage\" (ngModelChange)=\"onChange($event)\">\r\n            <option value=\"\" disabled selected>--Select--</option>\r\n            <option value=\"lend\">Lend</option>\r\n            <option value=\"borrow\">Borrow</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div *ngIf=\"connected\" class=\"divLBtn\">\r\n      <button (click)=\"onLogout()\" class=\"btn logoutbtn\">Logout</button>\r\n    </div>\r\n  </nav>  -->\r\n</div>\r\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from 'src/app/modules/auth/services/auth.service';\r\nimport { Web3Service } from '../../services/web3.service';\r\nimport { environment } from 'src/environments/environment';\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n  }\r\n}\r\n\r\n// window.ethereum.on('accountsChanged', () => {\r\n//   setTimeout(() => {\r\n//     location.reload();\r\n//   }, 400);\r\n// });\r\n\r\n// window.ethereum.on('chainChanged', () => {\r\n//   setTimeout(() => {\r\n//     location.reload();\r\n//   }, 400);\r\n// });\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  loggedIn$: Observable<boolean>;\r\n  connected: Boolean = false;\r\n  started: Boolean = false;\r\n  selectedPage = '';\r\n  networkId = '';\r\n  testBtns = '';\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private authService: AuthService,\r\n    private web3: Web3Service,\r\n    private cd: ChangeDetectorRef,\r\n    private web3Service: Web3Service\r\n  ) {\r\n    this.loggedIn$ = this.authService.getLoginState();\r\n    // this.checkConnectionAndLoadData();\r\n  }\r\n\r\n  // async checkConnectionAndLoadData() {\r\n  //   let accounts = await this.web3Service.checkConnection();\r\n  //   console.log(accounts);\r\n  //   if (!accounts) {\r\n  //     this.router.navigateByUrl('/home');\r\n  //   }\r\n  //   this.networkId = accounts[0] || '';\r\n  //   console.log(this.networkId);\r\n  //   if (this.networkId) {\r\n  //     // this.refreshData();\r\n  //   } else {\r\n  //     this.router.navigateByUrl('/home');\r\n  //     this.cd.detectChanges();\r\n  //   }\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.subscribe((val) => {\r\n      console.log(this.router.url);\r\n      switch (this.router.url) {\r\n        case '/home':\r\n          this.started = false;\r\n          this.connected = false;\r\n          break;\r\n        case '/home/connect':\r\n          this.started = true;\r\n          this.connected = true;\r\n          break;\r\n        case '/home/lending':\r\n          this.started = true;\r\n          this.connected = true;\r\n          this.selectedPage = 'lend';\r\n          break;\r\n        case '/home/borrow':\r\n          this.started = true;\r\n          this.connected = true;\r\n          this.selectedPage = 'borrow';\r\n          break;\r\n        case '/home/my-transactions':\r\n          this.started = true;\r\n          this.connected = true;\r\n          this.selectedPage = '';\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    this.navBarCheck();\r\n    this.web3.events$.forEach((event) => {\r\n      console.log(event);\r\n      if (event == '/home/lending') {\r\n        this.selectedPage = 'lend';\r\n        console.log(this.selectedPage);\r\n        this.cd.detectChanges();\r\n      }\r\n      if (event == '/home/borrow') {\r\n        this.selectedPage = 'borrow';\r\n        console.log(this.selectedPage);\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n  navBarCheck() {\r\n    switch (this.router.url) {\r\n      case '/home':\r\n        this.started = false;\r\n        this.connected = false;\r\n        break;\r\n      case '/home/connect':\r\n        this.started = true;\r\n        this.connected = true;\r\n        break;\r\n      case '/home/lending':\r\n        this.started = true;\r\n        this.selectedPage = 'lend';\r\n        this.connected = true;\r\n        break;\r\n      case '/home/borrow':\r\n        this.started = true;\r\n        this.connected = true;\r\n        this.selectedPage = 'borrow';\r\n        break;\r\n      case '/home/my-transactions':\r\n        this.started = true;\r\n        this.connected = true;\r\n        this.selectedPage = '';\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigateByUrl('/auth/login');\r\n    });\r\n  }\r\n\r\n  onChange(value: string) {\r\n    console.log('the selected value is ' + value);\r\n    if (value == 'lend') {\r\n      this.router.navigateByUrl('/home/lending');\r\n    }\r\n    if (value == 'borrow') {\r\n      this.router.navigateByUrl('/home/borrow');\r\n    }\r\n  }\r\n  onChangeTBtns(value: string) {\r\n    console.log('the selected value is ' + value);\r\n    if (value == 'addtestusdt') {\r\n      this.addTokenToWallet();\r\n    }\r\n    if (value == 'testusdt') {\r\n      this.getToken();\r\n    }\r\n\r\n    if (value == 'addnetwork') {\r\n      this.addNetworkToWallet();\r\n    }\r\n  }\r\n\r\n  async addTokenToWallet() {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      try {\r\n        let result = await window.ethereum.request({\r\n          method: 'wallet_watchAsset',\r\n          params: {\r\n            type: 'ERC20',\r\n            options: {\r\n              address: environment.TokenAddress,\r\n              symbol: 'USDT',\r\n              decimals: 18,\r\n              image: '',\r\n            },\r\n          },\r\n        });\r\n        console.log('token add result', result);\r\n      } catch (error) {\r\n        console.log('Error while adding token to metamask');\r\n      }\r\n    }\r\n  }\r\n\r\n  async addNetworkToWallet() {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      try {\r\n        let result = await window.ethereum.request({\r\n          jsonrpc: '2.0',\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: '0x13881',\r\n              chainName: 'Polygon Testnet',\r\n              rpcUrls: ['https://matic-mumbai.chainstacklabs.com'],\r\n              nativeCurrency: {\r\n                name: 'MATIC',\r\n                symbol: 'MATIC',\r\n                decimals: 18,\r\n              },\r\n              blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\r\n            },\r\n          ],\r\n        });\r\n        console.log('Network added result', result);\r\n        if (result == undefined) {\r\n        }\r\n      } catch (error) {\r\n        console.log('Error while adding network to wallet');\r\n      }\r\n    }\r\n  }\r\n\r\n  async getToken() {\r\n    console.log('', this.web3Service.getAccount());\r\n    try {\r\n      let walletAddress = this.web3Service.getAccount();\r\n      await setTimeout(() => {\r\n        let mintTokenResult = this.web3Service\r\n          .artifactsToTokenContract(environment.TokenAddress)\r\n          .methods.mint(\r\n            walletAddress,\r\n            this.web3Service.convertToSmallestUnit('1000')\r\n          )\r\n          .send({ from: walletAddress });\r\n        console.log(mintTokenResult);\r\n      }, 300);\r\n    } catch (error) {\r\n      console.log('Error while minting tokens to wallet');\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContentComponent } from './common/components/layouts/content/content.component';\r\nimport { FullComponent } from './common/components/layouts/full/full.component';\r\nimport { content } from './common/routes/content.routes';\r\nimport { full } from './common/routes/full.routes';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: full,\r\n  },\r\n  {\r\n    path: '',\r\n    component: ContentComponent,\r\n    children: content,\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/home',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-full',\r\n  templateUrl: './full.component.html',\r\n  styleUrls: ['./full.component.css']\r\n})\r\nexport class FullComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Routes } from '@angular/router';\r\n\r\nexport const full: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () =>\r\n      // import('../../modules/auth/auth.module').then((m) => m.AuthModule),\r\n      import('../../modules/flow/flow.module').then((m) => m.FlowModule),\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-header></app-header>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\nexport const content: Routes = [\r\n  {\r\n    path: 'nfts',\r\n    // canLoad: [AuthGuard],\r\n    loadChildren: () =>\r\n      import('../../modules/nft/nft.module').then((m) => m.NftModule),\r\n  },\r\n  {\r\n    path: 'deposits',\r\n    // canLoad: [AuthGuard],\r\n    loadChildren: () =>\r\n      import('../../modules/deposit/deposit.module').then(\r\n        (m) => m.DepositModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'home',\r\n    // canLoad: [AuthGuard],\r\n    loadChildren: () =>\r\n      import('../../modules/flow/flow.module').then(\r\n        (m) => m.FlowModule\r\n      ),\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthHttpInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const modifiedReq = req.clone({\r\n      withCredentials: true,\r\n    });\r\n\r\n    return next.handle(modifiedReq).pipe(\r\n      catchError((error) => {\r\n        if (error.status === 403) {\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ChainlinkAPIService } from './common/services/chainlink-api.service';\r\nimport { Web3Service } from './common/services/web3.service';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HeaderComponent } from './common/components/header/header.component';\r\nimport { ContentComponent } from './common/components/layouts/content/content.component';\r\nimport { FullComponent } from './common/components/layouts/full/full.component';\r\n\r\nimport {\r\n  SocialLoginModule,\r\n  SocialAuthServiceConfig,\r\n} from 'angularx-social-login';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n} from 'angularx-social-login';\r\n\r\nimport { AuthHttpInterceptor } from './common/interceptors/auth-http.interceptor';\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { FormBuilder, FormsModule } from '@angular/forms';\r\nimport { NumberWithCommaPipe } from './common/pipes/number-with-comma.pipe';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ContentComponent,\r\n    FullComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    SocialLoginModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthHttpInterceptor, multi: true },\r\n    Web3Service,\r\n    ChainlinkAPIService,\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(environment.googleClientId),\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider(environment.facebookClientId),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    },\r\n    FormBuilder\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main.js"}