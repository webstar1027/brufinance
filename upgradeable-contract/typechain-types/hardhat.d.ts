/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BruRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruRouter__factory>;
    getContractFactory(
      name: "AssetTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetTreasury__factory>;
    getContractFactory(
      name: "BruAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruAdmin__factory>;
    getContractFactory(
      name: "BruFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruFactory__factory>;
    getContractFactory(
      name: "BruPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruPool__factory>;
    getContractFactory(
      name: "BruPrice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruPrice__factory>;
    getContractFactory(
      name: "StakePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakePool__factory>;
    getContractFactory(
      name: "IAssetTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetTreasury__factory>;
    getContractFactory(
      name: "IBruAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruAdmin__factory>;
    getContractFactory(
      name: "IBruFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruFactory__factory>;
    getContractFactory(
      name: "IBruPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruPool__factory>;
    getContractFactory(
      name: "IBruPrice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruPrice__factory>;
    getContractFactory(
      name: "IBruProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruProxy__factory>;
    getContractFactory(
      name: "IBruRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBruRouter__factory>;
    getContractFactory(
      name: "IPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolToken__factory>;
    getContractFactory(
      name: "MultiSig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiSig__factory>;
    getContractFactory(
      name: "BruProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruProxy__factory>;
    getContractFactory(
      name: "BruToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BruToken__factory>;
    getContractFactory(
      name: "InterestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestToken__factory>;
    getContractFactory(
      name: "PoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolToken__factory>;
    getContractFactory(
      name: "TestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestToken__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;
    getContractFactory(
      name: "TokenVestingBru",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenVestingBru__factory>;

    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BruRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruRouter>;
    getContractAt(
      name: "AssetTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetTreasury>;
    getContractAt(
      name: "BruAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruAdmin>;
    getContractAt(
      name: "BruFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruFactory>;
    getContractAt(
      name: "BruPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruPool>;
    getContractAt(
      name: "BruPrice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruPrice>;
    getContractAt(
      name: "StakePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakePool>;
    getContractAt(
      name: "IAssetTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetTreasury>;
    getContractAt(
      name: "IBruAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruAdmin>;
    getContractAt(
      name: "IBruFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruFactory>;
    getContractAt(
      name: "IBruPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruPool>;
    getContractAt(
      name: "IBruPrice",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruPrice>;
    getContractAt(
      name: "IBruProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruProxy>;
    getContractAt(
      name: "IBruRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBruRouter>;
    getContractAt(
      name: "IPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolToken>;
    getContractAt(
      name: "MultiSig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiSig>;
    getContractAt(
      name: "BruProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruProxy>;
    getContractAt(
      name: "BruToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BruToken>;
    getContractAt(
      name: "InterestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestToken>;
    getContractAt(
      name: "PoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolToken>;
    getContractAt(
      name: "TestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestToken>;
    getContractAt(
      name: "Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token>;
    getContractAt(
      name: "TokenVestingBru",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenVestingBru>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
