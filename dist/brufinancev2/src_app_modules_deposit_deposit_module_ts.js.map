{"version":3,"mappings":"qUA6HMA,qBAAkEA,oEAChEA,yBACFA,+BACAA,qBACEA,gBACFA,gJA3CJA,kBACEA,gBAAsDA,yCAASC,EAATC,gBAASD,QAAc,iBAAgBD,QAC7FA,iBAAoBA,yBAAaA,QACjCA,gBACEA,kDACAA,mBAA8BA,sBAAUA,cAAKA,mBAAMA,QAAQA,wDACzBA,eAAKA,4BACvCA,oBAA8BA,kBAAKA,QACrCA,QACAA,eACAA,mBACEA,mBACEA,mBACEA,iBAAgCA,mBAAMA,oBAA8BA,kBAAKA,QAAQA,6BAAeA,QAClGA,QACAA,mBACEA,iBACEA,qBAA+CA,4EAA/CA,QACFA,QACFA,QACFA,QACAA,mBACEA,mBACEA,iBAAgCA,gCAAmBA,QACrDA,QACAA,mBACEA,iBAAsCA,0BAAaA,QACrDA,QACFA,QACFA,QAEAA,eAEAA,mBAKEA,4BAGAA,4BAGFA,QACFA,iCA5ByDA,0CAgBlDA,qCAKMA,4CAGAA,oFAKbA,kBACEA,gBAAsDA,yCAASC,EAATC,gBAASD,QAAc,iBAAgBD,QAC7FA,iBAAoBA,8BAAkBA,QACtCA,kBACEA,gBACAA,gBAAiCA,kCAAsBA,QACzDA,QACAA,kBACEA,gBAA2BA,6BAAgBA,oBAA8BA,UAAgBA,QAAOA,oBACpEA,mBAAKA,QACjCA,QACAA,iBAA+CA,8CAAiCA,oBAA8BA,wBAClGA,QACVA,mBAAKA,QACTA,QACAA,cAAGA,kDAAqCA,oBAA8BA,+BAAkBA,QAAOA,QAE/FA,eAEAA,mBAKEA,sBAAuCA,sEACrCA,8BACFA,QACFA,QACFA,iCApB6EA,gCAWtEA,gEAjEPA,yBA8CAA,+CA9C2CA,gCA8CAA,iFAsEvCA,qBAAmEA,qEACjEA,0BACFA,+BACAA,qBACEA,gBACFA,iDA3CJA,kBACEA,gBAAsDA,yCAASG,EAATD,gBAASC,QAAc,iBAAgBH,QAC7FA,iBAAoBA,0BAAcA,QAClCA,gBACEA,wFAA2EA,mBAA8BA,0BAClGA,QAAQA,qBAAQA,mBAA8BA,qBAAQA,QAAQA,iBAAGA,oBAC9CA,2BAAcA,QAAQA,uBAClDA,QACAA,eACAA,mBACEA,mBACEA,mBACEA,iBAAgCA,+BAAkBA,QACpDA,QACAA,mBACEA,iBAAsBA,oBAA8BA,6BAA8BA,QAAQA,oBAC9DA,mBAAKA,QAAOA,QAC1CA,QACFA,QACAA,mBACEA,mBACEA,iBAAgCA,uCAA0BA,QAC5DA,QACAA,mBACEA,iBACEA,qBAA+CA,6EAA/CA,QACFA,QACFA,QACFA,QACFA,QAEAA,eAEAA,mBAKEA,4BAGAA,4BAGFA,QACFA,iCA9B4DA,8CAUHA,2CAQlDA,qCAKMA,6CAGAA,qFAKbA,kBACEA,gBAAsDA,yCAASG,EAATD,gBAASC,QAAc,iBAAgBH,QAC7FA,iBAAoBA,+BAAmBA,QACvCA,kBACEA,gBACAA,gBAAiCA,kCAAsBA,QACzDA,QACAA,kBACEA,gBAA2BA,6BAAgBA,oBAA8BA,UAAiBA,QAAOA,oBACrEA,mBAAKA,QACjCA,QACAA,iBAA+CA,0BAAaA,oBAA8BA,iBAAIA,QAAQA,4CAC3EA,QAC7BA,QACAA,cAAGA,kDAAqCA,oBAA8BA,+BAAkBA,QAAOA,QAE/FA,eAEAA,mBAKEA,sBAAuCA,sEACrCA,8BACFA,QACFA,QACFA,iCAnB6EA,iCAUtEA,gEAhEPA,yBA8CAA,+CA9C2CA,iCA8CAA,0CC9M7C,MAAMI,EAAiB,CACrB,CACEC,KAAM,GACNC,UCEJ,MAAM,QAsBJC,YACUC,EACAC,EACAC,GAFAC,oBACAA,kBACAA,mBAxBVA,gBAAqB,EACrBA,gBAAqB,EACrBA,qBAA0B,EAC1BA,uBAA4B,EAC5BA,6BAAkC,EAClCA,kBAAuB,EACvBA,mBAAwB,EACxBA,wBAA6B,EAC7BA,yBAA8B,EAI9BA,UAAe,EAIfA,qBAA0B,EAC1BA,sBAA2B,EAC3BA,0BAAuB,GACvBA,cAAW,qCAOTA,KAAKC,YAAcD,KAAKD,YAAYG,aACpCF,KAAKG,SACLH,KAAKI,cACLJ,KAAKK,kBAGPC,WACEN,KAAKO,gBACLP,KAAKQ,qBAGDC,gBAAgBC,GAAyB,2CACvCC,EAAKd,aAAae,KAAKF,EAAS,CACpCG,eAAgB,sBACfC,QAH0C,GAM/CC,gBACEC,QAAQC,IAAI,kBAAmBjB,KAAKkB,cACX,GAArBlB,KAAKkB,eACPlB,KAAKmB,mBAAoB,EACzBnB,KAAKoB,kBAAkBpB,KAAKkB,eAIhCG,iBACEL,QAAQC,IAAI,0BAA2BjB,KAAKsB,eAClB,GAAtBtB,KAAKsB,gBACPtB,KAAKuB,oBAAqB,EAC1BvB,KAAKwB,iBAAiBxB,KAAKsB,gBAI/BG,gBAAgBC,GAGd1B,KAAKF,WACF6B,aAAaD,EAHLE,6BAIRC,KAAMC,IACL9B,KAAKI,cACLY,QAAQC,IAAI,2BAA4Ba,KAEzCC,MAAOC,IACNhB,QAAQC,IAAIe,KAGZxB,qBAAkB,qCACtB,MAAMyB,QAAyBC,EAAKnC,YAAYoC,wBAAwBC,QAAQC,kBAAkBH,EAAKjC,aAAaqC,OAGpH,IAAIC,GAFgBC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACrBC,SAASX,EAAiB,KAClC,MAEzBM,EAAO,EACQ,CACbL,EAAKW,KAAOX,EAAKnC,YAAY+C,qBAAqBb,EAAiB,IACnE,MAAMc,EAAkBC,WAAWd,EAAKnC,YAAY+C,qBAAqBb,EAAiB,KACpFgB,EAJD,EAIoBF,EAAkB,GAAO,IAClDb,EAAKgB,KAAOH,EAAkBE,EAC9Bf,EAAKiB,wBAA0BF,IAZX,GAkBlBG,oBAAiB,qCACrB,MAAMnB,QAAyBC,EAAKnC,YAAYoC,wBAAwBC,QAAQC,kBAAkBH,EAAKjC,aAAaqC,OAGpH,IAAIC,GAFgBC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KACrBC,SAASX,EAAiB,KAClC,MAMvB,OALFM,EAAO,EAELL,EAAKW,KAAOX,EAAKnC,YAAY+C,qBAAqBb,EAAiB,IAF9D,EAGmBe,WAAWd,EAAKnC,YAAY+C,qBAAqBb,EAAiB,KAC/C,GAAO,KAT/B,GAiBjBb,kBAAkBM,GAAW,qCACjC,IACE,MAAM2B,EAAmB1C,EAAKZ,YAAYuD,sBAAsB5B,GAc1DZ,QAAeH,EAAKZ,YAAYoC,wBAAwBC,QAAQmB,eAAeC,KAAK,CACxFC,KAAM9C,EAAKV,YACXyD,MAAOL,IAETrC,QAAQC,IAAIH,GAERA,EAAO6C,SACThD,EAAKiD,qBAAuBjD,EAAKkD,SAAW/C,EAAOgD,gBACnDnD,EAAKQ,mBAAoB,EACzBR,EAAKoD,gBAAiB,SAEjBC,GACPhD,QAAQC,IAAI,sCACZD,QAAQC,IAAI+C,KA7BmB,GAiCnC7D,SACEH,KAAKF,WACFmE,QAAQjE,KAAKC,aACb4B,KAAMC,IACL9B,KAAKI,cACLJ,KAAKkE,WAAapC,EAClB9B,KAAKiE,QAAUjE,KAAKkE,WACpBlD,QAAQC,IAAI,eAAgBjB,KAAKkE,cAElCnC,MAAOC,IACNhB,QAAQC,IAAI,wBAAyBe,KAI3CmC,cAEEnE,KAAKF,WACFsE,WAFQxC,6BAGRC,KAAMC,IACL9B,KAAKqE,KAAOvC,EACZd,QAAQC,IAAI,eAAgBjB,KAAKqE,MACjCrE,KAAK6C,KAAO7C,KAAKqE,KAAO,KAAsB,EAC9CrE,KAAKkD,KAAOlD,KAAKqE,KAAO,KAAsBrE,KAAKsE,aACnDtE,KAAKmD,wBAA0BnD,KAAKkD,KAAOlD,KAAK6C,KAChD7C,KAAKuE,WAAavE,KAAKkD,OAExBnB,MAAOC,IACNhB,QAAQC,IAAI,wBAAyBe,KAIrCzB,gBAAa,qCACjB,IACE,MAAMmB,QAAeQ,EAAKnC,YAAYyE,4BAA4BpC,QAAQqC,UAAUvC,EAAKjC,aAAaqC,OACtGJ,EAAKmC,KAAOnC,EAAKnC,YAAY+C,qBAAqBpB,SAE3CsC,GACPhD,QAAQC,IAAI,gDACZD,QAAQC,IAAI+C,KAPG,GAWnBU,mBAIAtE,cACEJ,KAAKF,WACFM,YAAYwB,6BACZC,KAAMC,IAEL9B,KAAK2E,UAAY7C,EACjBd,QAAQC,IAAI,UAAWa,GACvBd,QAAQC,IAAI,oBAAqBjB,KAAK2E,aAEvC5C,MAAOC,IACNhB,QAAQC,IAAI,0CAA2Ce,KAI7D3B,kBACEL,KAAKF,WACFO,gBAAgBuB,6BAChBC,KAAMC,IAEL9B,KAAKsE,aAAexC,EAAO,KAC3Bd,QAAQC,IAAI,UAAWa,GACvBd,QAAQC,IAAI,oBAAqBjB,KAAKqE,QAEvCtC,MAAOC,IACNhB,QAAQC,IAAI,0CAA2Ce,KAI7D4C,eAAelD,GACb,MAAMmD,EAAKjD,4BACLkD,EAAYC,OAAOrD,EAAS,IAAM,IACxC1B,KAAKF,WACF8E,eAAeE,EAAWD,GAC1BhD,KAAMC,IACL9B,KAAKI,cACLY,QAAQC,IAAIa,GACZd,QAAQC,IAAIjB,KAAK6C,QAElBd,MAAOC,IACNhB,QAAQC,IAAIe,EAAIgD,WAGhBxD,iBAAiBE,GAAW,qCAChC,IACE,IAAIuB,QAAiBtC,EAAKyC,oBAC1BH,EAAWT,KAAKC,MAAMQ,EAAU,IAAM,IACtCjC,QAAQC,IAAIgC,EAAS,iBACrB,MAAMI,EAAmB1C,EAAKZ,YAAYuD,sBAAsB5B,GAC1DZ,QAAeH,EAAKZ,YAAYoC,wBAAwBC,QAAQ6C,OAAO5B,EAAiBJ,GAAUO,KAAK,CAC3GC,KAAQ9C,EAAKV,cAEfU,EAAKY,oBAAqB,EACtBT,EAAO6C,SACThD,EAAKiD,qBAAuBjD,EAAKkD,SAAW/C,EAAOgD,gBACnDnD,EAAKY,oBAAqB,EAC1BZ,EAAKuE,iBAAkB,SAElBlB,GACPhD,QAAQC,IAAI,+CACZD,QAAQC,IAAI+C,KAjBkB,GAoBlCmB,kBACMnF,KAAK4D,sBACPwB,OAAOxE,KAAKZ,KAAK4D,qBAAsB,wDA3PhCyB,GAAgBhG,4DAAhBgG,EAAgBC,m7DFV7BjG,iBACEA,qBACEA,iBACAA,iBACAA,iBACEA,gBAA6BA,iBAAKA,kBAA0BA,2BAAeA,QAE3EA,QAEAA,eACEA,sBAAQA,kBACRA,mBAAiCA,kBAAKA,QAAQA,uBAASA,eACvDA,mBAAiCA,wBAAWA,QAAQA,0BAAYA,eAChEA,mBAAiCA,8BAAiBA,QAAOA,eAC3DA,QACAA,gBACEA,sBAAQA,4DAASkG,uBACflG,sBACFA,QACAA,sBAAQA,4DAASkG,uBACflG,uBACFA,QACFA,QACAA,gBACEA,iBAAwBA,2DAA8CA,oBACjDA,2BAAcA,QAAOA,QAC1CA,iBAAwCA,oEAAuDA,QACjGA,QAEFA,QAEAA,mBAEEA,mBACEA,mBAEAA,mBACAA,mBAEEA,iBAAwBA,mBAA8EA,oBAC/EA,wBACbA,QACRA,oBAA0BA,mBAACA,QAC7BA,QACAA,iBACEA,+BACAA,oBAAqCA,kBAAKA,QAC1CA,oBAAsCA,6BAClCA,QACNA,QACAA,iBACEA,uBAASA,oBAAiCA,kBAAKA,QAAQA,6DACrCA,oBAAiCA,gBAAGA,QACxDA,QAEAA,mBACEA,iBAA2BA,yBAAYA,QACvCA,iBAAyBA,uBACvBA,oBAAqCA,kBAAKA,QAC1CA,oBAAsCA,6BAA8BA,QACtEA,QACAA,iBAAyBA,kCACvBA,oBAAqCA,kBAAKA,QAC1CA,oBAAsCA,6BAA6BA,QACrEA,QACAA,iBAAyBA,sCACvBA,oBAAqCA,iBAAIA,QACzCA,oBAAsCA,6BAAgDA,QACxFA,QACAA,iBAAyBA,oCACvBA,oBAAqCA,kBAAKA,QAC1CA,oBAAsCA,6BAA6BA,QACrEA,QACAA,iBAAyBA,8BACvBA,oBAAqCA,iBAAIA,QACzCA,oBAAsCA,6BAA6BA,QACrEA,QACFA,QACFA,QACFA,QAEFA,QACFA,QACAA,sBACFA,QAEAA,4CA8EAA,mDArHkDA,kDAYEA,+CAIAA,8CAIAA,iEAIAA,8CAIAA,0yQEjEvCgG,GAAb,KDMO,IAAMG,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBhG,IACtBgG,QAECD,GAAb,GELaE,EAAb,MAAM,sDAAOA,4DAFF,CAACC,KAAcC,KAAaJ,MAE1BE,GAAb","names":["i0","modal_r4","oxw","modal_r19","routes","path","component","constructor","modalService","nftService","web3Service","this","userAddress","getAccount","getBal","totalSupply","getExchangeRate","ngOnInit","getBalofBTKV1","getInterestAccrued","handleModalOpen","content","e","open","ariaLabelledBy","result","handleDeposit","console","log","depositValue","depositBtnClicked","depositInternalV1","handleWithdraw","withdrawValue","withdrawBtnClicked","redeemInternalV1","depositInternal","amount","mintInternal","environment","then","data","catch","err","depositedDetails","n","artifactsToContractV1","methods","getDepositDetails","call","days","Math","round","Date","getTime","parseInt","dbal","convertToLargestUnit","principalAmount","parseFloat","interest","wbal","calEthInterestOnDeposit","getInterestAmount","converted_amount","convertToSmallestUnit","depositMatic","send","from","value","status","urlToViewTransaction","maticurl","transactionHash","depositSuccess","error","balance","onChainBal","getBalofBTK","getBalance","BTKN","exchangeRate","ethBalance","artifactsToBTokenContract","balanceOf","getTotaldeposit","totalBTKN","redeemInternal","sc","weiAmount","BigInt","message","redeem","withdrawSuccess","viewTransaction","window","LendingComponent","selectors","ctx","DepositRoutingModule","RouterModule","DepositModule","CommonModule","FormsModule"],"sources":["./src/app/modules/deposit/components/lending/lending.component.html","./src/app/modules/deposit/deposit-routing.module.ts","./src/app/modules/deposit/components/lending/lending.component.ts","./src/app/modules/deposit/deposit.module.ts"],"sourcesContent":["<div class=\"lending\">\r\n  <section class=\"lending__main\">\r\n    <div class=\"floatingBubble floatingBubble1\"></div>\r\n    <div class=\"floatingBubble floatingBubble2\"></div>\r\n    <div class=\"lending__section-one\">\r\n      <h2 class=\"lending__heading\">It's <span class=\"lendingTime\">Lending Time !!</span>\r\n        <!-- <img class=\"vector\" src=\"../../../../../assets/images/Vector 1.png\" alt=\"vector\"> -->\r\n      </h2>\r\n\r\n      <p class=\"lending__cont\">\r\n        Deposit <img style=\"margin: 0 13px;\" class=\"eth\" src=\"../../../../../assets/images/polygon.png\" alt=\"ETH\">\r\n        <span class=\"lending__cont_bold\">MATIC</span> and enjoy<br>\r\n        <span class=\"lending__cont_bold\">High Yield.</span> Lend against<br>\r\n        <span class=\"lending__cont_bold\">Real World Assets</span>.\r\n      </p>\r\n      <div>\r\n        <button (click)=\"handleModalOpen(depositModal)\" class=\"lending__btn1\">\r\n          Deposit\r\n        </button>\r\n        <button (click)=\"handleModalOpen(withdrawModal)\" class=\"lending__btn2\">\r\n          Withdraw\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <p class=\"PtextDeposit\">Deposit your crypto & earn 10% interest on it <span style=\"color: #540F7A;\r\n          font-weight: 500;\">( MATIC only )</span></p>\r\n        <p class=\"PtextDeposit2 darkColorTheme\">Withdraw your deposited crypto anytime when you need it</p>\r\n      </div>\r\n      <!-- <div class=\"lending__interest\">*Earn 7 interest on deposits</div> -->\r\n    </div>\r\n\r\n    <div class=\"lending__section-two\">\r\n      <!-- <div class=\"card card_1\"> -->\r\n      <div class=\"card card_2\">\r\n        <div class=\"walletSideShadowBox\">\r\n        </div>\r\n        <img class=\"spiralImage\" src=\"../../../../../assets/images/sprial.png\">\r\n        <div style=\"background-color: white;\r\n        border-radius: 22px;\">\r\n          <p class=\"walletPClass\"><img class=\"wallet_icon\" src=\"../../../../../assets/images/wallet.png\" alt=\"\"><span\r\n              class=\"walletText\">Your\r\n              Wallet</span>\r\n            <span class=\"statusCheck\">•</span>\r\n          </p>\r\n          <p class=\"walletBalance\">\r\n            Wallet Balance :\r\n            <span class=\"defText darkColorTheme\">MATIC</span>\r\n            <span class=\"defText lightColorTheme\">{{ onChainBal | number: \"1.6-6\"\r\n              }}</span>\r\n          </p>\r\n          <p class=\"walletNoteText\">\r\n            Transfer <span class=\"darkColorThemeText\">MATIC</span> from your MetaMask Wallet to\r\n            make a deposit on <span class=\"darkColorThemeText\">BRU</span>\r\n          </p>\r\n\r\n          <div class=\"mt-4\">\r\n            <p class=\"transactionsTab\">Transactions</p>\r\n            <p class=\"walletBalance\">Balance :\r\n              <span class=\"defText darkColorTheme\">MATIC</span>\r\n              <span class=\"defText lightColorTheme\">{{ balance | number: \"1.4-4\"}}</span>\r\n            </p>\r\n            <p class=\"walletBalance\">Pool Asset Balance :\r\n              <span class=\"defText darkColorTheme\">MATIC</span>\r\n              <span class=\"defText lightColorTheme\">{{ dbal | number: \"1.10-10\"}}</span>\r\n            </p>\r\n            <p class=\"walletBalance\">Total Interest Accrued :\r\n              <span class=\"defText darkColorTheme\">BTKN</span>\r\n              <span class=\"defText lightColorTheme\">{{ calEthInterestOnDeposit | number: \"1.10-10\"}}</span>\r\n            </p>\r\n            <p class=\"walletBalance\">Withdrawable Balance :\r\n              <span class=\"defText darkColorTheme\">MATIC</span>\r\n              <span class=\"defText lightColorTheme\">{{ wbal | number: \"1.10-10\"}}</span>\r\n            </p>\r\n            <p class=\"walletBalance\">bMatic Balance :\r\n              <span class=\"defText darkColorTheme\">BTKN</span>\r\n              <span class=\"defText lightColorTheme\">{{ BTKN | number: \"1.10-10\"}}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- </div> -->\r\n    </div>\r\n  </section>\r\n  <footer class=\"lending__footer\"></footer>\r\n</div>\r\n\r\n<ng-template #depositModal let-modal>\r\n  <div class=\"modal-body p-4 deposit-modal\" *ngIf=\"!depositSuccess\">\r\n    <i class=\"fa fa-times closeeBtn\" data-dismiss=\"modal\" (click)=\"modal.dismiss('Cross Click')\"></i>\r\n    <h3 class=\"modalH3\">Deposit MATIC</h3>\r\n    <p class=\"modalClasssText\">\r\n      The deposited amount is lent against\r\n      <span class=\"lightColorTheme\">Real World<br> Assets</span> such as\r\n      agricultural commodities stored in<br> warehouses in\r\n      <span class=\"lightColorTheme\">India</span>\r\n    </p>\r\n    <br />\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-7\">\r\n          <p class=\"text-left modalPText\">Enter <span class=\"lightColorTheme\">MATIC</span> to be deposited</p>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p class=\"text-right\">\r\n            <input class=\"input\" placeholder=\"Enter MATIC\" [(ngModel)]=\"depositValue\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-7\">\r\n          <p class=\"text-left modalPText\">Interest Applicable</p>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p class=\"text-right lightColorTheme\">10% per annum</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div [ngStyle]=\"{\r\n        'padding-right': '15px',\r\n        display: 'flex',\r\n        'justify-content': 'flex-end'\r\n      }\">\r\n      <button *ngIf=\"!depositBtnClicked\" class=\"button button--deposit\" (click)=\"handleDeposit()\">\r\n        Deposit Now\r\n      </button>\r\n      <button *ngIf=\"depositBtnClicked\" class=\"button button--deposit\">\r\n        <i class=\"fa fa-spin fa-circle-o-notch\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body p-4 deposit-modal\" *ngIf=\"depositSuccess\">\r\n    <i class=\"fa fa-times closeeBtn\" data-dismiss=\"modal\" (click)=\"modal.dismiss('Cross Click')\"></i>\r\n    <h3 class=\"modalH3\">Deposit Successful</h3>\r\n    <div class=\"successModaldivPSuccess\">\r\n      <i class=\"fa fa-check-circle depositSUccessPIcon\"></i>\r\n      <p class=\"depositSuccessModalPL\">Transaction completed.</p>\r\n    </div>\r\n    <div class=\"successModaldiv\">\r\n      <p class=\"youDepositedMsg\">You Deposited : <span class=\"lightColorTheme\">{{depositValue}}</span><span\r\n          class=\"darkColorTheme\"> MATIC</span>\r\n      </p>\r\n      <p class=\"successModaldivP youDepositedSubMsg\">Accrued interest is shown on the <span class=\"lightColorTheme\">My\r\n          Deposits</span>\r\n        page.</p>\r\n    </div>\r\n    <p>You can also view the transaction on <span class=\"lightColorTheme\">Polygon Blockchain</span></p>\r\n\r\n    <br />\r\n\r\n    <div [ngStyle]=\"{\r\n        'padding-right': '15px',\r\n        display: 'flex',\r\n        'justify-content': 'flex-end'\r\n      }\">\r\n      <button class=\"button button--deposit\" (click)=\"viewTransaction()\">\r\n        View on Polygon\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #withdrawModal let-modal>\r\n  <div class=\"modal-body p-4 deposit-modal\" *ngIf=\"!withdrawSuccess\">\r\n    <i class=\"fa fa-times closeeBtn\" data-dismiss=\"modal\" (click)=\"modal.dismiss('Cross Click')\"></i>\r\n    <h3 class=\"modalH3\">Withdraw MATIC</h3>\r\n    <p class=\"modalClasssText\">\r\n      Please find the withdrawable amount you have to withdraw and the option to <span class=\"lightColorTheme\">withdraw\r\n        MATIC</span> to your <span class=\"lightColorTheme\">MetaMask</span> or <span\r\n        class=\"lightColorTheme\">WallectConnect</span> wallets.\r\n    </p>\r\n    <br />\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-7\">\r\n          <p class=\"text-left modalPText\">Withdrawable MATIC</p>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p class=\"text-right\"><span class=\"lightColorTheme\">{{ wbal | number: \"1.10-10\" }}</span> <span\r\n              class=\"darkColorTheme\"> MATIC</span></p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-7\">\r\n          <p class=\"text-left modalPText\">Enter MATIC to be withdraw</p>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p class=\"text-right\">\r\n            <input class=\"input\" placeholder=\"Enter MATIC\" [(ngModel)]=\"withdrawValue\" />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br />\r\n\r\n    <div [ngStyle]=\"{\r\n        'padding-right': '15px',\r\n        display: 'flex',\r\n        'justify-content': 'flex-end'\r\n      }\">\r\n      <button *ngIf=\"!withdrawBtnClicked\" class=\"button button--deposit\" (click)=\"handleWithdraw()\">\r\n        Withdraw Now\r\n      </button>\r\n      <button *ngIf=\"withdrawBtnClicked\" class=\"button button--deposit\">\r\n        <i class=\"fa fa-spin fa-circle-o-notch\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body p-4 deposit-modal\" *ngIf=\"withdrawSuccess\">\r\n    <i class=\"fa fa-times closeeBtn\" data-dismiss=\"modal\" (click)=\"modal.dismiss('Cross Click')\"></i>\r\n    <h3 class=\"modalH3\">Withdraw Successful</h3>\r\n    <div class=\"successModaldivPSuccess\">\r\n      <i class=\"fa fa-check-circle depositSUccessPIcon\"></i>\r\n      <p class=\"depositSuccessModalPL\">Transaction completed.</p>\r\n    </div>\r\n    <div class=\"successModaldiv\">\r\n      <p class=\"youDepositedMsg\">You withdrawn : <span class=\"lightColorTheme\">{{withdrawValue}}</span><span\r\n          class=\"darkColorTheme\"> MATIC</span>\r\n      </p>\r\n      <p class=\"successModaldivP youDepositedSubMsg\">You can also <span class=\"lightColorTheme\">Lend</span> your\r\n        withdrawn money any time.</p>\r\n    </div>\r\n    <p>You can also view the transaction on <span class=\"lightColorTheme\">Polygon Blockchain</span></p>\r\n\r\n    <br />\r\n\r\n    <div [ngStyle]=\"{\r\n        'padding-right': '15px',\r\n        display: 'flex',\r\n        'justify-content': 'flex-end'\r\n      }\">\r\n      <button class=\"button button--deposit\" (click)=\"viewTransaction()\">\r\n        View on Polygon\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LendingComponent } from './components/lending/lending.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LendingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DepositRoutingModule {}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NftService } from '../../../nft/services/nft.service';\r\nimport { Web3Service } from '../../../../common/services/web3.service';\r\nimport { environment } from '../../../../../environments/environment';\r\n@Component({\r\n  selector: 'app-lending',\r\n  templateUrl: './lending.component.html',\r\n  styleUrls: ['./lending.component.css'],\r\n})\r\nexport class LendingComponent implements OnInit {\r\n  onChainBal: number = 0;\r\n  ethBalance: number = 0;\r\n  totalEthDeposit: number = 0;\r\n  totalEthWithdrawl: number = 0;\r\n  calEthInterestOnDeposit: number = 0;\r\n  depositValue: number = 0;\r\n  withdrawValue: number = 0;\r\n  depositBtnClicked: boolean = false;\r\n  withdrawBtnClicked: boolean = false;\r\n  userAddress: any;\r\n  balance: any;\r\n  dbal: any;\r\n  wbal: number = 0;\r\n  BTKN: any;\r\n  totalBTKN: any;\r\n  exchangeRate: any;\r\n  depositSuccess: Boolean = false;\r\n  withdrawSuccess: Boolean = false;\r\n  urlToViewTransaction = '';\r\n  maticurl = \"https://mumbai.polygonscan.com/tx/\";\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private nftService: NftService,\r\n    private web3Service: Web3Service\r\n  ) {\r\n    this.userAddress = this.web3Service.getAccount();\r\n    this.getBal();\r\n    this.totalSupply();\r\n    this.getExchangeRate();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBalofBTKV1();\r\n    this.getInterestAccrued()\r\n  }\r\n\r\n  async handleModalOpen(content: TemplateRef<any>) {\r\n    await this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title',\r\n    }).result;\r\n  }\r\n\r\n  handleDeposit() {\r\n    console.log('handleDeposits ', this.depositValue);\r\n    if (this.depositValue != 0) {\r\n      this.depositBtnClicked = true;\r\n      this.depositInternalV1(this.depositValue);\r\n    }\r\n  }\r\n\r\n  handleWithdraw() {\r\n    console.log('handle withdraw amount ', this.withdrawValue);\r\n    if (this.withdrawValue != 0) {\r\n      this.withdrawBtnClicked = true;\r\n      this.redeemInternalV1(this.withdrawValue);\r\n    }\r\n  }\r\n\r\n  depositInternal(amount: any) {\r\n    const sc = environment.ABI.networks[3].address;\r\n    this.web3Service.artifactsToBTokenContract\r\n    this.nftService\r\n      .mintInternal(amount, sc)\r\n      .then((data: any) => {\r\n        this.totalSupply();\r\n        console.log('deposit Internal BTKN 1 ', data);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async getInterestAccrued() {\r\n    const depositedDetails = await this.web3Service.artifactsToContractV1().methods.getDepositDetails(this.userAddress).call()\r\n    const currentTime = Math.round(new Date().getTime() / 1000)\r\n    const difference = currentTime - parseInt(depositedDetails[1])\r\n    let days = difference / (60 * 60 * 24)\r\n    // if(depositedDetails[2])\r\n    days = 1\r\n    if (days >= 1) {\r\n      this.dbal = this.web3Service.convertToLargestUnit(depositedDetails[0])\r\n      const principalAmount = parseFloat(this.web3Service.convertToLargestUnit(depositedDetails[0]))\r\n      const interest = (days * principalAmount * 0.1) / 365\r\n      this.wbal = principalAmount + interest\r\n      this.calEthInterestOnDeposit = interest\r\n    } else {\r\n      this.calEthInterestOnDeposit = 0\r\n    }\r\n  }\r\n\r\n  async getInterestAmount(){\r\n    const depositedDetails = await this.web3Service.artifactsToContractV1().methods.getDepositDetails(this.userAddress).call()\r\n    const currentTime = Math.round(new Date().getTime() / 1000)\r\n    const difference = currentTime - parseInt(depositedDetails[1])\r\n    let days = difference / (60 * 60 * 24)\r\n    days = 1\r\n    if (days >= 1) {\r\n      this.dbal = this.web3Service.convertToLargestUnit(depositedDetails[0])\r\n      const principalAmount = parseFloat(this.web3Service.convertToLargestUnit(depositedDetails[0]))\r\n      const interest = (days * principalAmount * 0.1) / 365\r\n      return interest\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n\r\n  async depositInternalV1(amount: any) {\r\n    try {\r\n      const converted_amount = this.web3Service.convertToSmallestUnit(amount)\r\n      // const result = await this.web3Service.artifactsToIERCContract().methods.approve(environment.lendingContractAddress, converted_amount).send({\r\n      //   'from': this.userAddress,\r\n      //   gas: \"210000\",\r\n      // })\r\n      // if (result.status === true) {\r\n      //   const deposit_result = await this.web3Service.artifactsToContractV1().methods.deposit(converted_amount).send({\r\n      //     from:this.userAddress,\r\n      //     gas: \"210000\",\r\n      //   })\r\n      //   console.log(deposit_result, ' after approve result')\r\n\r\n      // }\r\n\r\n      const result = await this.web3Service.artifactsToContractV1().methods.depositMatic().send({\r\n        from: this.userAddress,\r\n        value: converted_amount\r\n      })\r\n      console.log(result)\r\n\r\n      if (result.status) {\r\n        this.urlToViewTransaction = this.maticurl + result[\"transactionHash\"]\r\n        this.depositBtnClicked = false;\r\n        this.depositSuccess = true;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error while depositing Matic token\")\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  getBal() {\r\n    this.nftService\r\n      .balance(this.userAddress)\r\n      .then((data: any) => {\r\n        this.totalSupply();\r\n        this.onChainBal = data;\r\n        this.balance = this.onChainBal;\r\n        console.log('ETH BALANCE ', this.onChainBal);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('error to get balance ', err);\r\n      });\r\n  }\r\n\r\n  getBalofBTK() {\r\n    const sc = environment.ABI.networks[3].address;\r\n    this.nftService\r\n      .getBalance(sc)\r\n      .then((data: any) => {\r\n        this.BTKN = data;\r\n        console.log('BTK BALANCE ', this.BTKN);\r\n        this.dbal = this.BTKN / 1000000000000000000 * 2;\r\n        this.wbal = this.BTKN / 1000000000000000000 * this.exchangeRate;\r\n        this.calEthInterestOnDeposit = this.wbal - this.dbal;\r\n        this.ethBalance = this.wbal;\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('error to get balance ', err);\r\n      });\r\n  }\r\n\r\n  async getBalofBTKV1() {\r\n    try {\r\n      const amount = await this.web3Service.artifactsToBTokenContract().methods.balanceOf(this.userAddress).call()\r\n      this.BTKN = this.web3Service.convertToLargestUnit(amount)\r\n\r\n    } catch (error) {\r\n      console.log(\"Error while fetching balance of bMatic token\")\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  getTotaldeposit() {\r\n\r\n  }\r\n\r\n  totalSupply() {\r\n    this.nftService\r\n      .totalSupply(environment.ABI.networks[3].address)\r\n      .then((data: any) => {\r\n        // this.BTKN = data / 10000000000000000;\r\n        this.totalBTKN = data;\r\n        console.log('data : ', data);\r\n        console.log('total BRU supply:', this.totalBTKN);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err to get total supply of BRU tokens: ', err);\r\n      });\r\n  }\r\n\r\n  getExchangeRate() {\r\n    this.nftService\r\n      .getExchangeRate(environment.ABI.networks[3].address)\r\n      .then((data: any) => {\r\n        // this.BTKN = data / 10000000000000000;\r\n        this.exchangeRate = data / 1000000000000000000;\r\n        console.log('data : ', data);\r\n        console.log('total BRU supply:', this.BTKN);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log('err to get total supply of BRU tokens: ', err);\r\n      });\r\n  }\r\n\r\n  redeemInternal(amount: any) {\r\n    const sc = environment.ABI.networks[3].address;\r\n    const weiAmount = BigInt(amount * 10 ** 16);\r\n    this.nftService\r\n      .redeemInternal(weiAmount, sc)\r\n      .then((data: any) => {\r\n        this.totalSupply();\r\n        console.log(data);\r\n        console.log(this.dbal);\r\n      })\r\n      .catch((err: any) => {\r\n        console.log(err.message);\r\n      });\r\n  }\r\n  async redeemInternalV1(amount: any) {\r\n    try {\r\n      let interest = await this.getInterestAmount()\r\n      interest = Math.round(interest* 10 ** 18)\r\n      console.log(interest,\"interest here\")\r\n      const converted_amount = this.web3Service.convertToSmallestUnit(amount)\r\n      const result = await this.web3Service.artifactsToContractV1().methods.redeem(converted_amount,interest).send({\r\n        \"from\": this.userAddress\r\n      })\r\n      this.withdrawBtnClicked = false;\r\n      if (result.status) {\r\n        this.urlToViewTransaction = this.maticurl + result[\"transactionHash\"]\r\n        this.withdrawBtnClicked = false;\r\n        this.withdrawSuccess = true;\r\n      }\r\n    } catch (error) {\r\n      console.log('Errow while withdrawing Matic from the pool')\r\n      console.log(error)\r\n    }\r\n  }\r\n  viewTransaction() {\r\n    if (this.urlToViewTransaction) {\r\n      window.open(this.urlToViewTransaction, '_blank')\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DepositRoutingModule } from './deposit-routing.module';\r\nimport { LendingComponent } from './components/lending/lending.component';\r\n\r\n@NgModule({\r\n  declarations: [LendingComponent],\r\n  imports: [CommonModule, FormsModule, DepositRoutingModule],\r\n})\r\nexport class DepositModule {}\r\n"],"sourceRoot":"webpack:///","file":"src_app_modules_deposit_deposit_module_ts.js"}