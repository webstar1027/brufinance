/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BruRouter, BruRouterInterface } from "../../contracts/BruRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nftId",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPoolDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "poolName",
            type: "string",
          },
          {
            internalType: "address",
            name: "poolTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "implementationPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasuryAddress",
            type: "address",
          },
        ],
        internalType: "struct PoolDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "getPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
    ],
    name: "getPoolDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "poolName",
            type: "string",
          },
          {
            internalType: "address",
            name: "poolTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "interestTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "proxyPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "implementationPoolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasuryAddress",
            type: "address",
          },
        ],
        internalType: "struct PoolDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nftId",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ba2380380610ba283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b0f806100936000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80638ff33dce1161005b5780638ff33dce146100db578063b8764c39146100ee578063bc157ac11461010e578063fa6e65f61461012157600080fd5b8062a5ae2114610081578063271b07e5146100b1578063441a3e70146100c6575b600080fd5b61009461008f366004610744565b610134565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b96101b5565b6040516100a89190610957565b6100d96100d4366004610834565b61023a565b005b6100d96100e9366004610795565b6102db565b6101016100fc366004610744565b610379565b6040516100a891906109e6565b6100d961011c36600461075d565b610428565b6100d961012f366004610795565b6104c9565b6000805460405162a5ae2160e01b8152600481018490526001600160a01b039091169062a5ae219060240160206040518083038186803b15801561017757600080fd5b505afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af919061061b565b92915050565b600080546040805163271b07e560e01b815290516060936001600160a01b039093169263271b07e59260048082019391829003018186803b1580156101f957600080fd5b505afa15801561020d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610235919081019061063f565b905090565b600061024583610134565b90506001600160a01b0381166102765760405162461bcd60e51b815260040161026d906109b9565b60405180910390fd5b60405163f3fef3a360e01b8152336004820152602481018390526001600160a01b0382169063f3fef3a390604401600060405180830381600087803b1580156102be57600080fd5b505af11580156102d2573d6000803e3d6000fd5b50505050505050565b60006102e685610134565b90506001600160a01b03811661030e5760405162461bcd60e51b815260040161026d906109b9565b604051634dca9d3360e01b81526001600160a01b03821690634dca9d339061034090339088908790899060040161091c565b600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b505050505050505050565b6040805160c08101825260608082526000602083018190528284018190529082018190526080820181905260a0820181905254915163b8764c3960e01b81526004810184905290916001600160a01b03169063b8764c399060240160006040518083038186803b1580156103ec57600080fd5b505afa158015610400573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101af9190810190610707565b600061043384610134565b90506001600160a01b03811661045b5760405162461bcd60e51b815260040161026d906109b9565b604051638340f54960e01b81523360048201526001600160a01b03848116602483015260448201849052821690638340f54990606401600060405180830381600087803b1580156104ab57600080fd5b505af11580156104bf573d6000803e3d6000fd5b5050505050505050565b60006104d485610134565b90506001600160a01b0381166104fc5760405162461bcd60e51b815260040161026d906109b9565b604051633771bd0760e11b81526001600160a01b03821690636ee37a0e906103409033908890889088906004016108e8565b805161053981610ac1565b919050565b600060c0828403121561055057600080fd5b6105586109f9565b9050815167ffffffffffffffff81111561057157600080fd5b8201601f8101841361058257600080fd5b805161059561059082610a53565b610a22565b8181528560208385010111156105aa57600080fd5b6105bb826020830160208601610a7b565b8352506105cc90506020830161052e565b60208201526105dd6040830161052e565b60408201526105ee6060830161052e565b60608201526105ff6080830161052e565b608082015261061060a0830161052e565b60a082015292915050565b60006020828403121561062d57600080fd5b815161063881610ac1565b9392505050565b6000602080838503121561065257600080fd5b825167ffffffffffffffff8082111561066a57600080fd5b818501915085601f83011261067e57600080fd5b81518181111561069057610690610aab565b8060051b61069f858201610a22565b8281528581019085870183870188018b10156106ba57600080fd5b60009350835b858110156106f7578151878111156106d6578586fd5b6106e48d8b838c010161053e565b85525092880192908801906001016106c0565b50909a9950505050505050505050565b60006020828403121561071957600080fd5b815167ffffffffffffffff81111561073057600080fd5b61073c8482850161053e565b949350505050565b60006020828403121561075657600080fd5b5035919050565b60008060006060848603121561077257600080fd5b83359250602084013561078481610ac1565b929592945050506040919091013590565b600080600080608085870312156107ab57600080fd5b84359350602085013567ffffffffffffffff8111156107c957600080fd5b8501601f810187136107da57600080fd5b80356107e861059082610a53565b8181528860208385010111156107fd57600080fd5b81602084016020830137600060208383010152809550505050604085013561082481610ac1565b9396929550929360600135925050565b6000806040838503121561084757600080fd5b50508035926020909101359150565b6000815180845261086e816020860160208601610a7b565b601f01601f19169290920160200192915050565b6000815160c0845261089760c0850182610856565b6020848101516001600160a01b039081169187019190915260408086015182169087015260608086015182169087015260808086015182169087015260a09485015116949093019390935250919050565b600060018060a01b0380871683526080602084015261090a6080840187610856565b94166040830152506060015292915050565b600060018060a01b0380871683526080602084015261093e6080840187610856565b6040840195909552929092166060909101525092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156109ac57603f1988860301845261099a858351610882565b9450928501929085019060010161097e565b5092979650505050505050565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b6020815260006106386020830184610882565b60405160c0810167ffffffffffffffff81118282101715610a1c57610a1c610aab565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a4b57610a4b610aab565b604052919050565b600067ffffffffffffffff821115610a6d57610a6d610aab565b50601f01601f191660200190565b60005b83811015610a96578181015183820152602001610a7e565b83811115610aa5576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ad657600080fd5b5056fea26469706673582212207f37aece8012f35e34854cf42816305d1bf20ea8b2d74fc21c9be67734857e2f64736f6c63430008070033";

type BruRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BruRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BruRouter__factory extends ContractFactory {
  constructor(...args: BruRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BruRouter> {
    return super.deploy(_address, overrides || {}) as Promise<BruRouter>;
  }
  override getDeployTransaction(
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_address, overrides || {});
  }
  override attach(address: string): BruRouter {
    return super.attach(address) as BruRouter;
  }
  override connect(signer: Signer): BruRouter__factory {
    return super.connect(signer) as BruRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BruRouterInterface {
    return new utils.Interface(_abi) as BruRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BruRouter {
    return new Contract(address, _abi, signerOrProvider) as BruRouter;
  }
}
